<Application x:Class="NewLaserProject.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:views="clr-namespace:NewLaserProject.Views"
             xmlns:dbviews="clr-namespace:NewLaserProject.Views.DbViews"
             xmlns:viewmodels="clr-namespace:NewLaserProject.ViewModels"
             xmlns:dbviewmodels="clr-namespace:NewLaserProject.ViewModels.DbVM"
             xmlns:dd="urn:gong-wpf-dragdrop"
             xmlns:pblocks="clr-namespace:NewLaserProject.Classes.ProgBlocks"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:hc="https://handyorg.github.io/handycontrol" 
             xmlns:Controls="clr-namespace:MachineControlsLibrary.Controls;assembly=MachineControlsLibrary" 
             xmlns:entities ="clr-namespace:MachineClassLibrary.Laser.Entities;assembly=MachineClassLibrary"
             >
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Views/WizardDictionary.xaml"/>
                <!--<ResourceDictionary Source="pack://application:,,,/HandyControl;component/Themes/SkinViolet.xaml"/>-->
                <ResourceDictionary Source="pack://application:,,,/HandyControl;component/Themes/SkinDark.xaml"/>

                <ResourceDictionary Source="pack://application:,,,/HandyControl;component/Themes/Theme.xaml"/>
                <ResourceDictionary Source="Geometries.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <DataTemplate DataType="{x:Type viewmodels:AppSettingsVM}">
                <views:AppSettingsView/>
            </DataTemplate>
           
            <DataTemplate DataType="{x:Type viewmodels:LayersProcessingModel}">
                <views:LayerWizardTree/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewmodels:TechWizardViewModel}">
                <views:LayerWizardProgramView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewmodels:LaserDbViewModel}">
                <views:LaserTechnologiesView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type dbviewmodels:WriteTechnologyVM}">
                <dbviews:WriteTechnologyControl/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewmodels:FileVM}">
                <views:FileView/>
            </DataTemplate>

            <DataTemplate DataType="{x:Type viewmodels:CameraVM}">
                <views:CameraView/>
            </DataTemplate>
            
            <DataTemplate x:Key="Nothing">
                <Grid/>
            </DataTemplate>

            <DataTemplate x:Key="LaserCircleDataTemplate" DataType="{x:Type entities:PCircle}">
                <Path Data="{StaticResource CircleGeometry}" Stroke="{DynamicResource AccentBrush}" StrokeThickness="0.7">
                    <Path.LayoutTransform>
                        <ScaleTransform ScaleX="1.5" ScaleY="-1.5"/>
                    </Path.LayoutTransform>
                </Path>
            </DataTemplate>

            <DataTemplate x:Key="LaserCurveDataTemplate" DataType="{x:Type entities:PCurve}">
                <Path Data="{StaticResource CurveGeometry}" Stroke="{DynamicResource AccentBrush}" StrokeThickness="1">
                    <Path.LayoutTransform>
                        <ScaleTransform ScaleX="1.5" ScaleY="-1.5"/>
                    </Path.LayoutTransform>
                </Path>
            </DataTemplate>

            <DataTemplate x:Key="LaserLineDataTemplate" DataType="{x:Type entities:PLine}">
                <Path Data="{StaticResource LineGeometry}" Stroke="{DynamicResource AccentBrush}" StrokeThickness="2">
                    <Path.LayoutTransform>
                        <ScaleTransform ScaleX="0.6" ScaleY="-0.6"/>
                    </Path.LayoutTransform>
                </Path>
            </DataTemplate>

            <DataTemplate x:Key="LaserPointDataTemplate" DataType="{x:Type entities:PPoint}">
                <Path Data="{StaticResource PointGeometry}" Stroke="{DynamicResource AccentBrush}" StrokeThickness="3">
                    <Path.LayoutTransform>
                        <ScaleTransform ScaleX="0.5" ScaleY="-0.5"/>
                    </Path.LayoutTransform>
                </Path>
            </DataTemplate>
            
            <DataTemplate DataType="{x:Type pblocks:LoopBlock}">
                <GroupBox Style="{StaticResource LoopBox}" DataContext="{Binding}">
                    <GroupBox.Header>
                        <DockPanel>
                            <Label Content="Цикл " Style="{StaticResource BlockLabel}"/>
                            <hc:NumericUpDown Value="{Binding LoopCount, FallbackValue=2}" 
                                              Minimum="1"
                                              Style="{StaticResource NumericUpDownExtend}"
                                              Width="80"
                                              />                            
                        </DockPanel>
                    </GroupBox.Header>
                    <ItemsControl                           
                          ItemsSource="{Binding Children}"
                          Background="Transparent" 
                          HorizontalAlignment="Stretch" 
                          VerticalAlignment="Stretch"                             
                          MinHeight="50"
                          dd:DragDrop.IsDragSource="{Binding CanAcceptChildren}"  
                          dd:DragDrop.IsDropTarget="{Binding CanAcceptChildren}"
                          dd:DragDrop.DropHandler="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=DataContext}"                              
                          >                        
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding}"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </GroupBox>
            </DataTemplate>

            <DataTemplate DataType="{x:Type pblocks:MainLoop}">
                <GroupBox Style="{StaticResource MainLoop}" 
                          VerticalAlignment="Stretch"
                          DataContext="{Binding}">
                    <GroupBox.Header>
                        <DockPanel>
                            <Label Content="Основной цикл" Style="{StaticResource BlockLabel}"/>
                            <hc:NumericUpDown Value="{Binding LoopCount, FallbackValue=2}" 
                                              Minimum="1"
                                              Style="{StaticResource NumericUpDownExtend}"
                                              Width="80"
                                              />

                            <ToggleButton IsChecked="{Binding Shuffle}" 
                                          hc:Poptip.Content="Порядок обхода"
                                          hc:Poptip.Placement="RightTop"
                                          Style="{StaticResource ToggleButtonFlip}"
                                          Background="{StaticResource SuccessBrush}"
                                          HorizontalAlignment="Right"
                                          Margin="0,0,5,0"
                                          Padding="3"
                                          >
                                <hc:StatusSwitchElement.CheckedElement>
                                    <Path Data="{StaticResource ShuffleGeometry}" 
                                      Stroke="{StaticResource LightSuccessBrush}" 
                                      StrokeThickness="1"
                                      RenderTransformOrigin="0.5 0.5">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleY="-1"/>

                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                </hc:StatusSwitchElement.CheckedElement>
                                <Path Data="{StaticResource SequntelyGeometry}" 
                                      Stroke="{StaticResource LightSuccessBrush}" 
                                      StrokeThickness="1"
                                      RenderTransformOrigin="0.5 0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleY="-1"/>

                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </ToggleButton>
                        </DockPanel>

                    </GroupBox.Header>
                    <ItemsControl                           
                          ItemsSource="{Binding Children}"
                          Background="Transparent" 
                          HorizontalAlignment="Stretch" 
                          VerticalAlignment="Stretch"                             
                          MinHeight="50"
                          dd:DragDrop.IsDragSource="{Binding CanAcceptChildren}"  
                          dd:DragDrop.IsDropTarget="{Binding CanAcceptChildren}"
                          dd:DragDrop.DropHandler="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=DataContext}"                              
                          >
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding}"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </GroupBox>
            </DataTemplate>
            
            <DataTemplate DataType="{x:Type pblocks:TaperBlock}">
                <ItemsControl Style="{StaticResource SizeBlock}">
                    <Label Content="Изменить &#216;:" Style="{StaticResource BlockLabel}"/>                   
                    <hc:NumericUpDown Value="{Binding Tapper}"
                                      Width="80"
                                      DecimalPlaces="3"
                                      Increment="0.01"/>
                    <Label Content="мм" Style="{StaticResource BlockLabel}"/>
                </ItemsControl>
            </DataTemplate>

            <DataTemplate DataType="{x:Type pblocks:AddZBlock}">
                <ItemsControl Style="{StaticResource CoorBlock}">
                    <Label Content="Изменить глубину:" Style="{StaticResource BlockLabel}"/>
                    <hc:NumericUpDown Value="{Binding DeltaZ}"
                                      Width="80"
                                      DecimalPlaces="3" 
                                      Increment="0.01"/>
                    <Label Content="мм"  Margin="0,0,0,5" Style="{StaticResource BlockLabel}"/>
                </ItemsControl>
            </DataTemplate>

            <DataTemplate DataType="{x:Type pblocks:RepairZBlock}">
                <ItemsControl Style="{StaticResource CoorBlock}">
                    <Label Content="На исходную глубину" Style="{StaticResource BlockLabel}"/>                    
                </ItemsControl>
            </DataTemplate>


            <DataTemplate DataType="{x:Type pblocks:DelayBlock}">
                <ItemsControl Style="{StaticResource DelayBlock}">
                    <Label Content="Пауза: " Style="{StaticResource BlockLabel}"/>
                    <hc:NumericUpDown Value="{Binding DelayTime}"
                                      Width="80"
                                      Minimum="0"
                                      Increment="100"/>
                    <Label Content="мс" Style="{StaticResource BlockLabel}"/>
                </ItemsControl>
            </DataTemplate>

            <DataTemplate DataType="{x:Type pblocks:PierceBlock}">
                <ItemsControl Style="{StaticResource PierceBlock}">
                    <Label Content="Прошивка" Style="{StaticResource BlockLabel}"/>
                    <Button Content="Параметры" 
                            Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, 
                        Path=DataContext.SetPiercingParamsCommand}" 
                            CommandParameter="{Binding}"
                            Style="{StaticResource ButtonPrimary.Small}">
                        <Button.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="2"/>
                            </Style>
                        </Button.Resources>
                    </Button>
                </ItemsControl>
            </DataTemplate>
            
            <Style x:Key="CornerButton" TargetType="Button" >
                <Setter Property="Button.Background">
                    <Setter.Value>
                        <SolidColorBrush Color="#FFC2C3C9" />
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Visibility}" Value="Visible">
                        <DataTrigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation 
                                        Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                         From="#FFC2C3C9" To="#FF94F909" Duration="0:0:0.5" RepeatBehavior="2x" AutoReverse="True" />
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.EnterActions>
                    </DataTrigger>
                    <!--<EventTrigger RoutedEvent="Click">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation 
                                        Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                         From="Orange" To="White" Duration="0:0:0.5" AutoReverse="True" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>-->
                </Style.Triggers>
            </Style>
            <Style x:Key="CirclePanelButton" BasedOn="{StaticResource ButtonCustom}" TargetType="Button">
                <Setter Property="UseLayoutRounding" Value="False"/>
                <Setter Property="Height" Value="77"/>
                <Setter Property="Width" Value="36.06"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <Path Data="{StaticResource CirclePanelDemoGeometry}" Fill="{DynamicResource PrimaryBrush}" Height="77" Width="36.06"/>
                                <Path Data="{StaticResource CirclePanelRightGeometry}" Stretch="Uniform" Margin="12" Fill="White"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value=".9"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Opacity" Value=".6"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.4"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="CircularButton" BasedOn="{StaticResource ButtonCustom}" TargetType="Button">
                <Setter Property="UseLayoutRounding" Value="False"/>
                <Setter Property="Height" Value="77"/>
                <Setter Property="Width" Value="36.06"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <Path Data="{StaticResource CenterGeometry}" Stretch="Uniform" Fill="{DynamicResource PrimaryBrush}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value=".9"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Opacity" Value=".6"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.4"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="CircArrowButton" BasedOn="{StaticResource ButtonCustom}" TargetType="Button">
                <Setter Property="UseLayoutRounding" Value="False"/>
                <Setter Property="Height" Value="77"/>
                <Setter Property="Width" Value="36.06"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <Path Data="{StaticResource CircleArrowGeometry}" Stretch="Uniform" Fill="{DynamicResource PrimaryBrush}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value=".9"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Opacity" Value=".6"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.4"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="MirrorButton" BasedOn="{StaticResource ButtonCustom}" TargetType="Button">
                <Setter Property="UseLayoutRounding" Value="False"/>
                <Setter Property="Height" Value="77"/>
                <Setter Property="Width" Value="36.06"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <Path Data="{StaticResource MirrorGeometry}" Stretch="Uniform" StrokeThickness="2" Stroke="{StaticResource BorderBrush}" Fill="{DynamicResource PrimaryBrush}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value=".9"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Opacity" Value=".6"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.4"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="PlayButton" BasedOn="{StaticResource ButtonDefault}" TargetType="Button">
                <Setter Property="Content">
                    <Setter.Value>
                            <Path Data="{StaticResource PlaySignGeometry}" Stretch="UniformToFill"  Fill="{DynamicResource SuccessBrush}">
                                
                            </Path>
                    </Setter.Value>
                </Setter>                
            </Style>
        </ResourceDictionary>        
    </Application.Resources>
</Application>
