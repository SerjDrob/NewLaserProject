<hc:GlowWindow
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:mcl="clr-namespace:MachineClassLibrary.Machine;assembly=MachineClassLibrary"    
        xmlns:local="clr-namespace:NewLaserProject.Views"
        xmlns:hc="https://handyorg.github.io/handycontrol" 
        xmlns:uc="clr-namespace:MachineControlsLibrary.Controls;assembly=MachineControlsLibrary"         
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors" 
        xmlns:cnvrt="clr-namespace:MachineControlsLibrary.Converters;assembly=MachineControlsLibrary"
        xmlns:clr="clr-namespace:System;assembly=mscorlib"
        xmlns:Localconverters="clr-namespace:NewLaserProject.Views.Converters"
        xmlns:vm="clr-namespace:NewLaserProject.ViewModels"    
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" 
        x:Class="NewLaserProject.Views.MainView2"
        xmlns:classes="clr-namespace:NewLaserProject.Classes"
        xmlns:uclocal="clr-namespace:NewLaserProject.UserControls"
        xmlns:selectors ="clr-namespace:NewLaserProject.Views.Selectors"    
        mc:Ignorable="d"        
        ActiveGlowColor="{DynamicResource PrimaryColor}"    
        Title="Лазер"         
        Height="800" 
        Width="1200" 
        WindowState="Maximized">
    
    <Window.Resources>
        <Localconverters:LayersTreeStructureConvereter x:Key="LTreeStructureConverter"/>
        <Localconverters:LayersStructureConvereter x:Key="LStructureConvereter"/>
        <Localconverters:TextToEntityConverter x:Key="TextToEntityConverter"/>
        <Localconverters:IProcTypeToEntityConverter x:Key="IProcTypeToEntityConverter"/>
        <Localconverters:GetLayerNameConverter x:Key="GetLayerNameConverter"/>
        <Localconverters:FileAlignmentConverter x:Key="FileAlignmentConverter"/>
        <Localconverters:KeyProcessorArgsConverter x:Key="KeyProcessorArgsConverter"/>
        <CollectionViewSource x:Key="MaterialSource" Source="{Binding AvailableMaterials}"/>
        <CollectionViewSource x:Key="FileLayers" Source="{Binding LayGeoms}"/>
        <CollectionViewSource x:Key="FileStructure" Source="{Binding LayersStructure, Converter={StaticResource LStructureConvereter}}"/>
        <CollectionViewSource x:Key="ProcObjects" Source="{Binding ProcessingObjects}"/>


        <cnvrt:DivideConverter x:Key="DivideConverter"/>
        <cnvrt:MulConvereter x:Key="MulConvereter"/>
        <cnvrt:BoolToVisibleConvereter x:Key="BoolToVisibleConvereter"/>

        <Localconverters:AligningArgsConverter x:Key="AligningArgsConverters"/>
        <Localconverters:IProcToGeometryConverter x:Key="IProcToGeometryConverter"/>

        <clr:Boolean x:Key="TRUE">True</clr:Boolean>
        <clr:Boolean x:Key="FALSE">False</clr:Boolean>

        <selectors:LaserEntityDataSelector x:Key="EntitySelector"/>
        <selectors:AligningTypeDataSelector x:Key="AligningSelector"/>

        <Storyboard x:Key="DangerMessage">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ImportantIcon"
                                           Storyboard.TargetProperty="Visibility"                                           
                                           Duration="0:0:1" RepeatBehavior="5x" FillBehavior="Stop"
                                           >
                <ObjectAnimationUsingKeyFrames.KeyFrames>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.8" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames.KeyFrames>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ExclaimMessage">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ImportantMessage"  Storyboard.TargetProperty="Visibility">
                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" />
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimation Storyboard.TargetName="ImportantMessage" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.5"/>
        </Storyboard>

        <Style x:Key="ToolBorder" TargetType="Border">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="4"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Background" Value="{DynamicResource DarkMaskBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        </Style>

        <!--<x:Array x:Key="Alignings" Type="{x:Type clr:Object}">
            <classes:FileAlignment>AlignByCorner</classes:FileAlignment>
            <classes:FileAlignment> AlignByThreePoint</classes:FileAlignment>
            <classes:FileAlignment>AlignByTwoPoint</classes:FileAlignment>
        </x:Array>-->
      
    </Window.Resources>
    
    <!--<i:Interaction.Triggers>
        <i:EventTrigger EventName="KeyDown">
            <i:InvokeCommandAction Command="{Binding KeyDownCommand, Mode=OneWay}" 
                                   PassEventArgsToCommand="True"
                                   />
        </i:EventTrigger>
        <i:EventTrigger EventName="KeyUp">
            <i:InvokeCommandAction Command="{Binding KeyUpCommand, Mode=OneWay}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
    </i:Interaction.Triggers>-->
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="KeyDown">
            <i:InvokeCommandAction Command="{Binding TestKeyCommand, Mode=OneWay}" 
                                   PassEventArgsToCommand="True"
                                   EventArgsConverter="{StaticResource KeyProcessorArgsConverter}"
                                   EventArgsConverterParameter="{StaticResource TRUE}"/>
        </i:EventTrigger>
        <!--<i:EventTrigger EventName="KeyUp">
            <i:InvokeCommandAction Command="{Binding KeyUpCommand, Mode=OneWay}" PassEventArgsToCommand="True" />
        </i:EventTrigger>-->
        <i:EventTrigger EventName="KeyUp">
            <i:InvokeCommandAction Command="{Binding TestKeyCommand, Mode=OneWay}" 
                                   PassEventArgsToCommand="True"
                                   EventArgsConverter="{StaticResource KeyProcessorArgsConverter}"
                                   EventArgsConverterParameter="{StaticResource FALSE}"
                                   />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <ToolBarTray Margin="1" Orientation="Vertical" VerticalAlignment="Stretch">
            <ToolBar>
                <ToolBar.Resources>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    </Style>
                </ToolBar.Resources>
                <Grid MinHeight="45">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Border Style="{StaticResource ToolBorder}">
                        <Path Data="{StaticResource MotionDeviceGeometry}"
                              RenderTransformOrigin="0.5,0.5"
                              Stretch="UniformToFill"                              
                              >
                            <Path.RenderTransform>
                                <ScaleTransform ScaleY="-1"/>
                            </Path.RenderTransform>
                            <Path.Style>
                                <Style TargetType="Path">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsMotionInitialized}" Value="False">
                                            <Setter Property="Fill" Value="{StaticResource DangerBrush}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsMotionInitialized}" Value="True">
                                            <Setter Property="Fill" Value="{StaticResource SuccessBrush}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Path.Style>
                        </Path>
                    </Border>
                    <hc:Divider Orientation="Vertical" Grid.Column="1"/>
                    <Border Style="{StaticResource ToolBorder}" Grid.Column="2">
                        <Path x:Name="InitLaserIcon"
                              Data="{StaticResource LaserGeometry}"                              
                              RenderTransformOrigin="0.5,0.5"
                              Stretch="UniformToFill"
                              >
                            <Path.RenderTransform>
                                <ScaleTransform ScaleY="-1"/>
                            </Path.RenderTransform>

                            <Path.Style>
                                <Style TargetType="Path">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsLaserInitialized}" Value="False">
                                            <Setter Property="Fill" Value="{StaticResource DangerBrush}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsLaserInitialized}" Value="True">
                                            <Setter Property="Fill" Value="{StaticResource SuccessBrush}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Path.Style>
                        </Path>
                    </Border>
                </Grid>
                <Button hc:IconElement.Geometry="{StaticResource SpurGearGeometry}"
                        hc:IconElement.Width="15"
                        Command="{Binding MachineSettingsCommand}" 
                        HorizontalAlignment="Stretch">
                    <Button.ToolTip>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Настройки приводов"/>
                            <TextBlock Foreground="Blue" FontWeight="DemiBold"  Text=" H"/>
                        </StackPanel>
                    </Button.ToolTip>
                </Button>

                <hc:SplitButton hc:IconElement.Geometry="{StaticResource AcademicHatGeometry}" HorizontalAlignment="Stretch">
                    <hc:SplitButton.DropDownContent>
                        <StackPanel>
                            <MenuItem Command="{Binding StartTeachingCommand}"
                                      CommandParameter="{x:Static vm:Teacher.CameraOffset}"
                                      Header="Смещение камеры" InputGestureText="F2">
                                <MenuItem.Icon>
                                    <Image Source="Sources/distance-32.png" Height="20" RenderTransformOrigin="0.5,0.5"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Command="{Binding StartTeachingCommand}" 
                                      CommandParameter="{x:Static vm:Teacher.ScanatorHorizont}"
                                      Header="Горизонт сканатора" InputGestureText="F3">
                                <MenuItem.Icon>
                                    <Image Source="Sources/angle.png" Height="20" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Command="{Binding StartTeachingCommand}" 
                                      CommandParameter="{x:Static vm:Teacher.OrthXY}"
                                      Header="Ортогональность XY" InputGestureText="F4">
                                <MenuItem.Icon>
                                    <Image Source="Sources/orth.png" Height="20"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Command="{Binding StartTeachingCommand}" 
                                      CommandParameter="{x:Static vm:Teacher.CameraScale}"
                                      Header="Масштаб видео" InputGestureText="F5">
                                <MenuItem.Icon>
                                    <Image Source="Sources/scale.png" Height="20"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem 
                                      Header="Настройки видео" InputGestureText="F7">
                            </MenuItem>
                        </StackPanel>
                    </hc:SplitButton.DropDownContent>
                    <!--<Image Source="Sources/learning.png"/>-->
                </hc:SplitButton>
            </ToolBar>
            <ToolBar>
                <Button Command="{Binding ChooseMaterialCommand}" HorizontalAlignment="Stretch" MinHeight="50">
                    <hc:AdornerElement.Instance>
                        <hc:Poptip Content="Введите параметры подложки" PlacementType="TopLeft"/>
                    </hc:AdornerElement.Instance>
                    <StackPanel HorizontalAlignment="Center">
                        <TextBlock Text="Подложка" Style="{StaticResource TextBlockDefaultBold}" Margin="0,0,0,3"/>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" >
                            <TextBlock Text="{Binding WaferWidth}" Style="{DynamicResource TextBlockDefaultPrimary}"/>
                            <TextBlock Text="X" Style="{StaticResource TextBlockDefaultPrimary}"/>
                            <TextBlock Text="{Binding WaferHeight}" Style="{StaticResource TextBlockDefaultPrimary}"/>
                            <TextBlock Text="X" Style="{StaticResource TextBlockDefaultPrimary}"/>
                            <TextBlock Text="{Binding WaferThickness}" Style="{StaticResource TextBlockDefaultPrimary}"/>
                        </StackPanel>
                    </StackPanel>
                </Button>
                <StackPanel DockPanel.Dock="Bottom" >
                    <StackPanel.Resources>
                        <Style TargetType="Border">
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="CornerRadius" Value="4"/>
                            <Setter Property="Padding" Value="5"/>
                            <Setter Property="Background" Value="{DynamicResource DarkMaskBrush}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                        </Style>
                    </StackPanel.Resources>
                    <uc:AxisState CoordinateName="X"                                  
                                  Coordinate="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.XAxis.Position}"  
                                  LmtNeg="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.XAxis.NLmt}"
                                  LmtPos="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.XAxis.PLmt}"
                                  MotionDone="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.XAxis.MotionDone}" 
                                  CmdCoordinate="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.XAxis.CmdPosition}"
                                  />
                    <uc:AxisState CoordinateName="Y"
                                  Coordinate="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.YAxis.Position}"
                                  LmtNeg="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.YAxis.NLmt}"
                                  LmtPos="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.YAxis.PLmt}"
                                  MotionDone="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.YAxis.MotionDone}"
                                  CmdCoordinate="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.YAxis.CmdPosition}"
                                  />
                    <uc:AxisState CoordinateName="Z"
                                  Coordinate="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.ZAxis.Position}"
                                  LmtNeg="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.ZAxis.NLmt}"
                                  LmtPos="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.ZAxis.PLmt}"
                                  MotionDone="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.ZAxis.MotionDone}"
                                  CmdCoordinate="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.ZAxis.CmdPosition}"
                                  />
                    <!--<TextBlock x:Name="VelText" Text="Быстро">
                                <i:Interaction.Triggers>
                                    <i:DataTrigger Binding="{Binding VelocityRegime}" Value="{x:Static mcl:Velocity.Fast}">
                                        <i:ChangePropertyAction TargetObject="{Binding ElementName=VelText}" PropertyName="Text" Value="Быстро"/>
                                    </i:DataTrigger>
                                    <i:DataTrigger Binding="{Binding VelocityRegime}" Value="{x:Static mcl:Velocity.Slow}">
                                        <i:ChangePropertyAction TargetObject="{Binding ElementName=VelText}" PropertyName="Text" Value="Медленно"/>
                                    </i:DataTrigger>
                                </i:Interaction.Triggers>
                    </TextBlock>-->
                </StackPanel>
                <DockPanel>
                    <Border
                        DockPanel.Dock="Top"
                        Height="60"
                        Style="{StaticResource ToolBorder}"
                        >

                        <Grid>
                            <Grid>
                                <i:Interaction.Triggers>
                                    <i:DataTrigger Binding="{Binding VelocityRegime}" Value="{x:Static mcl:Velocity.Fast}">
                                        <i:ChangePropertyAction PropertyName="Visibility" Value="Visible"/>
                                    </i:DataTrigger>
                                    <i:DataTrigger Binding="{Binding VelocityRegime}" Value="{x:Static mcl:Velocity.Slow}">
                                        <i:ChangePropertyAction PropertyName="Visibility" Value="Hidden"/>
                                    </i:DataTrigger>
                                </i:Interaction.Triggers>
                                <Path Data="{StaticResource HighSpeedGeometry}" 
                              Fill="Red"
                              Stretch="Uniform"
                              RenderTransformOrigin="0.5, 0.5"
                              >
                                    <Path.RenderTransform>
                                        <ScaleTransform ScaleY="-1"/>
                                    </Path.RenderTransform>
                                </Path>
                                <Path Data="{StaticResource HighSpeedArrowGeometry}" 
                              Fill="{StaticResource InfoBrush}"
                                  Stretch="UniformToFill"
                              RenderTransformOrigin="0.5, 0.5"
                              >
                                    <Path.RenderTransform>
                                        <ScaleTransform ScaleY="-1"/>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                            <Grid>
                                <i:Interaction.Triggers>
                                    <i:DataTrigger Binding="{Binding VelocityRegime}" Value="{x:Static mcl:Velocity.Fast}">
                                        <i:ChangePropertyAction PropertyName="Visibility" Value="Hidden"/>
                                    </i:DataTrigger>
                                    <i:DataTrigger Binding="{Binding VelocityRegime}" Value="{x:Static mcl:Velocity.Slow}">
                                        <i:ChangePropertyAction PropertyName="Visibility" Value="Visible"/>
                                    </i:DataTrigger>
                                </i:Interaction.Triggers>
                                <Path Data="{StaticResource LowSpeedGeometry}" 
                              Fill="Green"
                              Stretch="Uniform"
                              RenderTransformOrigin="0.5, 0.5"
                              >
                                    <Path.RenderTransform>
                                        <ScaleTransform ScaleY="-1"/>
                                    </Path.RenderTransform>
                                </Path>
                                <Path Data="{StaticResource LowSpeedArrowGeometry}" 
                              Fill="{StaticResource InfoBrush}"
                                  Stretch="UniformToFill"
                              RenderTransformOrigin="0.5, 0.5"
                              >
                                    <Path.RenderTransform>
                                        <ScaleTransform ScaleY="-1"/>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                            <Grid>
                                <i:Interaction.Triggers>
                                    <i:DataTrigger Binding="{Binding VelocityRegime}" Value="{x:Static mcl:Velocity.Fast}">
                                        <i:ChangePropertyAction PropertyName="Visibility" Value="Hidden"/>
                                    </i:DataTrigger>
                                    <i:DataTrigger Binding="{Binding VelocityRegime}" Value="{x:Static mcl:Velocity.Slow}">
                                        <i:ChangePropertyAction PropertyName="Visibility" Value="Hidden"/>
                                    </i:DataTrigger>
                                    <i:DataTrigger Binding="{Binding VelocityRegime}" Value="{x:Static mcl:Velocity.Step}">
                                        <i:ChangePropertyAction PropertyName="Visibility" Value="Visible"/>
                                    </i:DataTrigger>
                                </i:Interaction.Triggers>
                                <Label Content="ШАГ"
                                       Foreground="red"
                                       HorizontalAlignment="Stretch"
                                       VerticalAlignment="Stretch"
                                       />
                            </Grid>
                        </Grid>
                    </Border>
                </DockPanel>
            </ToolBar>
            <ToolBar Visibility="Visible">
                <hc:TextBox Text="{Binding TestX}" hc:TitleElement.Title="TestX" hc:TitleElement.TitlePlacement="Left"/>
                <hc:TextBox Text="{Binding TestY}" hc:TitleElement.Title="TestY" hc:TitleElement.TitlePlacement="Left"/>
            </ToolBar>
        </ToolBarTray>
        <TabControl Margin="1" Grid.Column="1">
            <TabItem>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="GotFocus">
                        <i:ChangePropertyAction TargetObject="{Binding}" PropertyName="IsMainTabOpen" Value="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <TabItem.Header>
                    <Border BorderBrush="CadetBlue" Margin="0,0,10,0" CornerRadius="4" BorderThickness="1" DockPanel.Dock="Top" HorizontalAlignment="Left">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                            <TextBlock Text="{Binding DataContext.FileName, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"
                                           hc:InfoElement.Placeholder="Open file"
                                           Width="100" 
                                           Margin="2" 
                                           Background="LightYellow"/>
                            <Button Command="{Binding OpenFileCommand}" Content="Файл" Style="{StaticResource ButtonPrimary.Small}" />
                        </StackPanel>
                    </Border>
                </TabItem.Header>
                
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <ContentControl Content="{Binding CentralSideVM}"/>
                    <ScrollViewer VerticalScrollBarVisibility="Hidden" HorizontalAlignment="Right">
                        <StackPanel hc:Growl.GrowlParent="True" VerticalAlignment="Top" Margin="0,10,10,10"/>
                    </ScrollViewer>
                    <hc:ScrollViewer VerticalScrollBarVisibility="Hidden" HorizontalAlignment="Right" IsPenetrating="True">
                        <StackPanel hc:Growl.GrowlParent="True" VerticalAlignment="Top" Margin="0,10,10,10"/>
                    </hc:ScrollViewer>
                    <DockPanel Grid.Column="1" VerticalAlignment="Stretch" LastChildFill="True">
                        <Border x:Name="ImportantMessage"
                                DockPanel.Dock="Top"
                                VerticalAlignment="Top"
                                BorderThickness="2" 
                                BorderBrush="Blue"
                                Padding="2"
                                CornerRadius="3"
                                Height="30"
                                Margin="1"
                                >
                            <DockPanel>
                                <Image x:Name="ImportantIcon" Source="{Binding IconPath}" DockPanel.Dock="Left" Margin="0,0,5,0"/>
                                <TextBlock x:Name="ImportantText" Text="{Binding TechInfo}" FontWeight="Bold" FontSize="15" Foreground="Red">
                                    <i:Interaction.Triggers>
                                        <i:PropertyChangedTrigger Binding="{Binding Text, ElementName=ImportantText}">
                                            <i:ControlStoryboardAction Storyboard="{StaticResource DangerMessage}"/>                                
                                        </i:PropertyChangedTrigger>
                                    </i:Interaction.Triggers>
                                </TextBlock>
                            </DockPanel>
                        </Border>

                        <ContentControl Content="{Binding RightSideVM}" 
                                        DockPanel.Dock="Top"
                                        MinHeight="300"
                                        Visibility="{Binding IsRightPanelVisible, Converter={StaticResource Boolean2VisibilityConverter}}">
                            <!--<i:Interaction.Triggers>
                                    <i:DataTrigger Binding="{Binding OnProcess}" Value="True">
                                        <i:ChangePropertyAction PropertyName="Visibility" Value="Collapsed"/>
                                    </i:DataTrigger>
                                    <i:DataTrigger Binding="{Binding OnProcess}" Value="False">
                                        <i:ChangePropertyAction PropertyName="Visibility" Value="Visible"/>
                                    </i:DataTrigger>
                                </i:Interaction.Triggers>-->
                        </ContentControl>

                        <GroupBox x:Name="ProcessPanel"
                                      Header="Текущий процесс" 
                                      DockPanel.Dock="Top"
                                      VerticalAlignment="Stretch"
                                  >
                            <i:Interaction.Triggers>
                                <i:DataTrigger Binding="{Binding IsFileLoaded}" Value="False">
                                    <i:ChangePropertyAction PropertyName="Visibility" Value="Collapsed"/>
                                </i:DataTrigger>
                                <i:DataTrigger Binding="{Binding IsFileLoaded}" Value="True">
                                    <i:ChangePropertyAction PropertyName="Visibility" Value="Visible"/>
                                </i:DataTrigger>
                            </i:Interaction.Triggers>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="36"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <StackPanel Orientation="Horizontal" Grid.ColumnSpan="7">
                                    <DockPanel LastChildFill="True" HorizontalAlignment="Left">
                                        <!--<ToggleButton DockPanel.Dock="Right"
                                                      IsChecked="{Binding FileAlignment, Mode=OneWayToSource, Converter={StaticResource FileAlignmentConverter}}"
                                                      hc:IconSwitchElement.Geometry="{StaticResource AlignByAngleGeometry}"
                                                      hc:IconSwitchElement.GeometrySelected="{StaticResource AlignByThreePointGeometry}"
                                                      RenderTransformOrigin="0,0.5"
                                                      Style="{StaticResource ToggleButtonIcon}"
                                                      >
                                            <ToggleButton.RenderTransform>
                                                <ScaleTransform ScaleY="-1"/>
                                            </ToggleButton.RenderTransform>
                                        </ToggleButton>-->

                                        <!--<Button DockPanel.Dock="Right">
                                            <Path Data="{StaticResource AlignByAngleGeometry}" Stroke="White" Stretch="Uniform"/>
                                        </Button>-->

                                        <hc:ElementGroup x:Name="FileScale" DockPanel.Dock="Right" Orientation="Horizontal">
                                            <Label Content="Масштаб файла"/>
                                            <hc:ComboBox ItemsSource="{Binding Scales}"
                                                 SelectedItem="{Binding DefaultFileScale}"
                                                 Style="{StaticResource ComboBoxBaseStyle}"
                                                 Width="90"/>
                                            <!--<i:Interaction.Triggers>
                                                <i:DataTrigger Binding="{Binding FileAlignment}" Value="{x:Static classes:FileAlignment.AlignByThreePoint}">
                                                    <i:ChangePropertyAction PropertyName="Visibility" Value="Collapsed"/>
                                                </i:DataTrigger>
                                                <i:DataTrigger Binding="{Binding FileAlignment}" Value="{x:Static classes:FileAlignment.AlignByCorner}">
                                                    <i:ChangePropertyAction PropertyName="Visibility" Value="Visible"/>
                                                </i:DataTrigger>
                                                <i:DataTrigger Binding="{Binding FileAlignment}" Value="{x:Static classes:FileAlignment.AlignByTwoPoint}">
                                                    <i:ChangePropertyAction PropertyName="Visibility" Value="Visible"/>
                                                </i:DataTrigger>
                                            </i:Interaction.Triggers>-->
                                        </hc:ElementGroup>
                                        <uclocal:ItemsButton DockPanel.Dock="Right"
                                                             Items="{Binding Alignments}"
                                                             SelectedItem="{Binding FileAlignment, Mode=OneWayToSource}"
                                                             ItemSelector="{StaticResource AligningSelector}"
                                                             HorizontalAlignment="Stretch"
                                                            >
                                        </uclocal:ItemsButton>
                                        <Label Content="Тип совмещения"/>
                                    </DockPanel>
                                    <DockPanel>
                                        <Border CornerRadius="3" Background="{DynamicResource DarkMaskBrush}"
                                                BorderBrush="{DynamicResource BorderBrush}"
                                                BorderThickness="1"
                                                Padding="10,0,10,0"
                                                >
                                            <CheckBox IsChecked="{Binding IsWaferMark}" Content="Маркировать"/>
                                        </Border>
                                        <Button Command="{Binding SetMarkPositionCommand}" Width="36">
                                            <i:Interaction.Triggers>
                                                <i:DataTrigger Binding="{Binding MarkPosition}" Value="{x:Static vm:MarkPosition.W}">
                                                    <i:ChangePropertyAction PropertyName="Content" Value="| "/>
                                                </i:DataTrigger>
                                                <i:DataTrigger Binding="{Binding MarkPosition}" Value="{x:Static vm:MarkPosition.N}">
                                                    <i:ChangePropertyAction PropertyName="Content" Value="&#175;"/>
                                                </i:DataTrigger>
                                                <i:DataTrigger Binding="{Binding MarkPosition}" Value="{x:Static vm:MarkPosition.E}">
                                                    <i:ChangePropertyAction PropertyName="Content" Value=" |"/>
                                                </i:DataTrigger>
                                                <i:DataTrigger Binding="{Binding MarkPosition}" Value="{x:Static vm:MarkPosition.S}">
                                                    <i:ChangePropertyAction PropertyName="Content" Value="&#95;"/>
                                                </i:DataTrigger>
                                            </i:Interaction.Triggers>
                                        </Button>
                                        <ToggleButton IsChecked="{Binding CutMode}"
                                                      hc:IconElement.Geometry="{StaticResource ScissorGeometry}"
                                                      RenderTransformOrigin="0.5 0.5">
                                            <ToggleButton.RenderTransform>
                                                <ScaleTransform ScaleY="-1"/>
                                            </ToggleButton.RenderTransform>
                                        </ToggleButton>

                                        <Button Command="{Binding UndoCutCommand}"
                                                hc:IconElement.Geometry="{StaticResource UndoArrowGeometry}"
                                                RenderTransformOrigin="0.5 0.5">
                                            <Button.RenderTransform>
                                                <ScaleTransform ScaleY="-1"/>
                                            </Button.RenderTransform>
                                        </Button>
                                    </DockPanel>
                                    <!--<hc:ComboBox  Grid.Column="2" Grid.ColumnSpan="6" hc:InfoElement.Placeholder="Состав файла">
                                    <TreeView
                                              x:Name="LayersList" 
                                              Height="150" 
                                              ItemsSource="{Binding LayersStructure, Converter={StaticResource LTreeStructureConverter}}">
                                        <TreeView.ItemContainerStyle>
                                            <Style TargetType="{x:Type TreeViewItem}">
                                                <Setter Property="IsExpanded" Value="True" />
                                            </Style>
                                        </TreeView.ItemContainerStyle>
                                        <TreeView.Resources>
                                            <HierarchicalDataTemplate DataType="{x:Type vm:Layer}" ItemsSource="{Binding Objects}">
                                                <TextBlock Text="{Binding Name}" Style="{DynamicResource TextBlockDefault}"/>
                                            </HierarchicalDataTemplate>
                                            <DataTemplate DataType="{x:Type vm:Text}">
                                                <StackPanel Orientation="Horizontal">
                                                    -->
                                    <!--<TextBlock Text="{Binding Value}" Foreground="White"/>-->
                                    <!--
                                                    <ContentControl Content="{Binding Value, Converter={StaticResource TextToEntityConverter}}" 
                                                        ContentTemplateSelector="{StaticResource EntitySelector}"/>
                                                    <TextBlock Text=" [ " Style="{DynamicResource TextBlockDefaultPrimary}" />
                                                    <TextBlock Text="{Binding Count}" Style="{DynamicResource TextBlockDefaultPrimary}"/>
                                                    <TextBlock Text=" ]" Style="{DynamicResource TextBlockDefaultPrimary}"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </TreeView.Resources>
                                    </TreeView>
                                </hc:ComboBox>-->
                                </StackPanel>

                                <Button Grid.Row="1"
                                        hc:IconElement.Geometry="{StaticResource AddGeometry}"
                                        Command="{Binding AddObjectToProcessCommand}"
                                        Style="{StaticResource ButtonSuccess.Small}"
                                        />

                                <ComboBox 
                                        Grid.Row="1"
                                        ItemsSource="{Binding Source={StaticResource FileStructure}}"
                                        SelectedIndex="{Binding DefLayerIndex}"
                                        SelectedItem="{Binding CurrentLayerFilter, Converter={StaticResource GetLayerNameConverter}, Mode=OneWayToSource}"
                                        DisplayMemberPath="LayerName" Grid.Column="1"
                                        />

                                <uclocal:ItemsButton x:Name="testname" 
                                                        Grid.Row="1"
                                                        Grid.Column="2"
                                                        Items="{Binding Source={StaticResource FileStructure}, Path=Entities}"
                                                        ItemSelector="{StaticResource EntitySelector}"
                                                        SelectedItem="{Binding CurrentEntityType, Mode=OneWayToSource}"
                                                        SetIndex="{Binding DefEntityIndex}"
                                                        HorizontalAlignment="Stretch"
                                                        />

                                <ComboBox x:Name="Materials"
                                        Grid.Row="1"
                                        Grid.Column="3"
                                        ItemsSource="{Binding Source={StaticResource MaterialSource}}" 
                                        SelectedIndex="{Binding DefMaterialIndex}"                                        
                                        >
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding Name}" Margin="0,0,10,0"/>
                                                <TextBlock Text="{Binding Thickness}"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <ComboBox Grid.Row="1"
                                          Grid.Column="4"
                                          ItemsSource="{Binding Source={StaticResource MaterialSource}, 
                                          Path=Technologies}"
                                          SelectedIndex="{Binding DefTechnologyIndex}"
                                          SelectedItem="{Binding CurrentTechnology}"  
                                          >
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding ProgramName}" Margin="0,0,10,0"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>

                                <Grid Grid.Row="1" Grid.Column="5">
                                    <Button hc:IconElement.Geometry="{StaticResource DownloadGeometry}"
                                            Command="{Binding DownloadProcessCommand}"
                                            Panel.ZIndex="2">
                                        <i:Interaction.Triggers>
                                            <i:DataTrigger Binding="{Binding IsProcessPanelVisible}" Value="True">
                                                <i:ChangePropertyAction PropertyName="Visibility" Value="Hidden"/>
                                            </i:DataTrigger>
                                            <i:DataTrigger Binding="{Binding IsProcessPanelVisible}" Value="False">
                                                <i:ChangePropertyAction PropertyName="Visibility" Value="Visible"/>
                                            </i:DataTrigger>
                                        </i:Interaction.Triggers>

                                    </Button>
                                    <ToggleButton 
                                                  Command="{Binding StartStopProcessCommand}"
                                                  CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked}"
                                                  IsChecked="{Binding OnProcess}"
                                                  hc:IconSwitchElement.Geometry="{StaticResource PlaySignGeometry}"
                                                  hc:IconSwitchElement.GeometrySelected="{StaticResource StopSignGeometry}"
                                                  RenderTransformOrigin="0,0.5"
                                                  Style="{StaticResource ToggleButtonIcon}"
                                                  >
                                        <ToggleButton.RenderTransform>
                                            <ScaleTransform ScaleY="-1"/>
                                        </ToggleButton.RenderTransform>
                                    </ToggleButton>
                                </Grid>

                                <hc:ScrollViewer Grid.Row="2" Grid.ColumnSpan="3" Padding="5">
                                    <ItemsControl ItemsSource="{Binding ObjectsForProcessing}" >
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="36"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Button 
                                                    hc:IconElement.Geometry="{StaticResource DeleteGeometry}"
                                                    Command="{Binding RelativeSource={RelativeSource AncestorType=Window},Path=DataContext.RemoveObjectFromProcessCommand}"
                                                    CommandParameter="{Binding}"
                                                    Style="{StaticResource ButtonDanger.Small}"
                                                    />

                                                    <ComboBox 
                                                    x:Name="LayComb"
                                                    Grid.Column="1"
                                                    ItemsSource="{Binding Structure, Converter={StaticResource LStructureConvereter}}"            
                                                    SelectedValuePath="LayerName"
                                                    SelectedValue="{Binding Layer, Mode=OneWayToSource}"
                                                    DisplayMemberPath="LayerName"
                                                    >
                                                    </ComboBox>

                                                    <uclocal:ItemsButton 
                                                                Grid.Column="2"
                                                                Items="{Binding ElementName=LayComb, Path=SelectedItem.Entities}"
                                                                ItemSelector="{StaticResource EntitySelector}"
                                                                SelectedItem="{Binding LaserEntity, Mode=OneWayToSource}"
                                                                SetIndex="1"
                                                                HorizontalAlignment="Stretch"                                                    
                                                                />
                                                </Grid>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </hc:ScrollViewer>
                                <Border  Grid.Row="3" 
                                             Grid.ColumnSpan="6" 
                                             BorderBrush="{DynamicResource BorderBrush}"
                                             BorderThickness="2"
                                             Visibility="{Binding IsProcessPanelVisible, Converter={StaticResource Boolean2VisibilityConverter}}"
                                             >
                                    <DataGrid x:Name="ProcObjGrid"
                                              AutoGenerateColumns="False" 
                                              ItemsSource="{Binding ProcessingObjects}"
                                              Style="{StaticResource DataGrid.Small}"
                                              SelectionMode="Single"     
                                              SelectionChanged="DataGrid_SelectionChanged"
                                              LoadingRow="DataGrid_LoadingRow"
                                              
                                              >

                                        <!--<DataGrid.RowStyle>
                                            <Style TargetType="DataGridRow" BasedOn="{StaticResource DataGridRowStyle.Small}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsProcessed}" Value="True">
                                                        <Setter Property="IsEnabled"  Value="False"/>
                                                        <Setter Property="Opacity" Value="0.5"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsBeingProcessed}" Value="True">
                                                        <Setter Property="IsSelected"  Value="True"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DataGrid.RowStyle>-->
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="Слой" Binding="{Binding LayerName}"/>
                                            <DataGridTemplateColumn Header="Тип">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <ContentControl Content="{Binding Converter={StaticResource IProcTypeToEntityConverter}}" 
                                                                            ContentTemplateSelector="{StaticResource EntitySelector}"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <DataGridTemplateColumn Header="Координаты">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock >
                                                                <Run Text="{Binding X, StringFormat='{}{0:#.}'}"/>
                                                                <Run Text="&#215;"/>
                                                                <Run Text="{Binding Y, StringFormat='{}{0:#.}'}"/>
                                                        </TextBlock>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <DataGridTemplateColumn Header="Обработка">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <CheckBox IsChecked="{Binding ToProcess}">
                                                            <i:Interaction.Triggers>
                                                                <i:EventTrigger EventName="Checked">
                                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.ToProcCheckedCommand,
                                                                            RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" 
                                                                                               CommandParameter="{Binding}"
                                                                                               />
                                                                </i:EventTrigger>
                                                                <i:EventTrigger EventName="Unchecked">
                                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.ToProcUncheckedCommand,
                                                                            RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" 
                                                                                               CommandParameter="{Binding}"
                                                                                               />
                                                                </i:EventTrigger>
                                                            </i:Interaction.Triggers>
                                                        </CheckBox>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </Border>
                                <GroupBox Grid.Row="4" 
                                             Grid.ColumnSpan="6"
                                             Visibility="{Binding IsProcessPanelVisible, Converter={StaticResource Boolean2VisibilityConverter}}"
                                              >
                                    <GroupBox.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding IsBeingProcessedIndex, StringFormat='{}#{0}  '}"/>
                                            <TextBlock Text="{Binding IsBeingProcessedObject.LayerName, StringFormat='{}{0}  '}"/>
                                            <ContentControl Content="{Binding IsBeingProcessedObject,
                                                Converter={StaticResource IProcTypeToEntityConverter}}" 
                                                ContentTemplateSelector="{StaticResource EntitySelector}"/>
                                            <TextBlock>
                                                <Run Text="{Binding IsBeingProcessedObject.X, StringFormat='{}  {0:#.}'}"/>
                                                <Run Text="&#215;"/>
                                                <Run Text="{Binding IsBeingProcessedObject.Y, StringFormat='{}{0:#.}'}"/>
                                            </TextBlock>
                                        </StackPanel>
                                    </GroupBox.Header>
                                    <!--<Border 
                                             BorderBrush="{DynamicResource BorderBrush}"
                                             BorderThickness="2"
                                             Visibility="{Binding IsProcessPanelVisible, Converter={StaticResource Boolean2VisibilityConverter}}" 
                                             Padding="50">-->
                                    <Border 
                                             BorderBrush="{DynamicResource BorderBrush}"
                                             BorderThickness="2"
                                             Padding="5">
                                        <Path Data="{Binding IsBeingProcessedObject, Converter={StaticResource IProcToGeometryConverter}}" 
                                              Stretch="Uniform"
                                              Fill="red"
                                              Stroke="White"
                                              StrokeThickness="1"
                                              RenderTransformOrigin="0.5 0.5"
                                              >
                                            <Path.RenderTransform>
                                                <ScaleTransform ScaleY="-1"/>
                                            </Path.RenderTransform>
                                        </Path>
                                        <!--<Path Data="{Binding ElementName=ProcObjGrid, 
                                            Path=SelectedItem, 
                                            Converter={StaticResource IProcToGeometryConverter}}"
                                              
                                              Stretch="Uniform"
                                              Fill="red"
                                              Stroke="White"
                                              StrokeThickness="1"
                                              RenderTransformOrigin="0.5 0.5"
                                              >
                                            <Path.RenderTransform>
                                                <ScaleTransform ScaleY="-1"/>
                                            </Path.RenderTransform>
                                        </Path>-->
                                    </Border>
                                </GroupBox>
                            </Grid>
                        </GroupBox>

                        <!--<hc:StepBar x:Name="LearningPanel"
                                    DockPanel.Dock="Top" 
                                    Dock="Left" 
                                    Visibility="{Binding IsLearningPanelVisible, Converter={StaticResource Boolean2VisibilityConverter}}"
                                    ItemsSource="{Binding TeachingSteps}" 
                                    StepIndex="{Binding StepIndex}"/>-->

                    </DockPanel>
                </Grid>
            </TabItem>
            <TabItem Header="Мастер технологий" TabIndex="1">
                <i:Interaction.Triggers>
                    <i:DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TabItem}, Path=IsSelected}" 
                                   Value="True">
                        <i:InvokeCommandAction Command="{Binding DbLoadCommand}"/>
                    </i:DataTrigger>

                    <i:EventTrigger EventName="GotFocus">
                        <i:ChangePropertyAction TargetObject="{Binding}" PropertyName="IsMainTabOpen" Value="False"/>
                    </i:EventTrigger>

                </i:Interaction.Triggers>
                <DockPanel>
                    <ContentControl Content="{Binding LaserDbVM}"/>
                </DockPanel>
            </TabItem>
            <TabItem Header="Настройки" TabIndex="2">
                <i:Interaction.Triggers>
                    <i:DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TabItem}, Path=IsSelected}" 
                                   Value="True">
                        <i:InvokeCommandAction Command="{Binding AppSettingsOpenCommand}"/>
                    </i:DataTrigger>
                    <i:DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TabItem}, Path=IsSelected}" 
                                   Value="False">
                        <i:InvokeCommandAction Command="{Binding AppSettingsCloseCommand}"/>
                    </i:DataTrigger>
                    <i:EventTrigger EventName="GotFocus">
                        <i:ChangePropertyAction TargetObject="{Binding}" PropertyName="IsMainTabOpen" Value="False"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ContentControl Content="{Binding AppSngsVM}"/>
            </TabItem>
        </TabControl>
    </Grid>
</hc:GlowWindow>
