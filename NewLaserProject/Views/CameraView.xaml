<UserControl x:Class="NewLaserProject.Views.CameraView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:NewLaserProject.Views"
             xmlns:mcl="clr-namespace:MachineClassLibrary.Machine;assembly=MachineClassLibrary"    
             xmlns:hc="https://handyorg.github.io/handycontrol" 
             xmlns:uc="clr-namespace:MachineControlsLibrary.Controls;assembly=MachineControlsLibrary"         
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors" 
             xmlns:cnvrt="clr-namespace:MachineControlsLibrary.Converters;assembly=MachineControlsLibrary"
             xmlns:clr="clr-namespace:System;assembly=mscorlib"
             xmlns:Localconverters="clr-namespace:NewLaserProject.Views.Converters"
             xmlns:vm="clr-namespace:NewLaserProject.ViewModels"    
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" 
             xmlns:uclocal="clr-namespace:NewLaserProject.UserControls"
             xmlns:selectors ="clr-namespace:NewLaserProject.Views.Selectors"  
             xmlns:dd="urn:gong-wpf-dragdrop"             
             xmlns:s="clr-namespace:NewLaserProject.Views.Misc"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <cnvrt:DivideConverter x:Key="DivideConverter"/>
        <cnvrt:MulConvereter x:Key="MulConvereter"/>
        <cnvrt:BoolToVisibleConvereter x:Key="BoolToVisibleConvereter"/>
        <Localconverters:MouseEventArgsConverter x:Key="MouseEventArgsConverter"/>
        <Localconverters:PointSpecWinConverter x:Key="PointSpecWinConverter"/>
        <Localconverters:MarkPositionConverter x:Key="MarkPositionConverter"/>

        <ControlTemplate x:Key="ResizeDecoratorTemplate" TargetType="{x:Type Control}">
            <Grid>
                <s:ResizeThumb Height="3" Width="7" Cursor="SizeNS" Opacity="0"
                       VerticalAlignment="Top" HorizontalAlignment="Center"/>
                <s:ResizeThumb Width="3" Height="7" Cursor="SizeWE" Opacity="0"
                       VerticalAlignment="Center" HorizontalAlignment="Left"/>
                <s:ResizeThumb Width="3" Height="7" Cursor="SizeWE" Opacity="0"
                       VerticalAlignment="Center" HorizontalAlignment="Right"/>
                <s:ResizeThumb Height="3" Width="7" Cursor="SizeNS" Opacity="0"
                       VerticalAlignment="Bottom" HorizontalAlignment="Center"/>
            </Grid>
        </ControlTemplate>

        <!-- Designer Item Template-->
        <ControlTemplate x:Key="DesignerItemTemplate" TargetType="ContentControl">
            <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                <Control Template="{StaticResource ResizeDecoratorTemplate}"/>
                <ContentPresenter Content="{TemplateBinding ContentControl.Content}"/>
            </Grid>
        </ControlTemplate>

    </UserControl.Resources>
    <Grid>
        <Border Background="{DynamicResource RegionBrush}" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource BorderBrush}">
            <Grid>
                <Button Content="Snap" 
                        Visibility="{Binding SnapShotButtonVisible, Converter={StaticResource Boolean2VisibilityConverter}}"
                        Command="{Binding OpenTargetWindowCommand}"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Panel.ZIndex="10"/>

                <Image x:Name="VideoCamera" 
                       Panel.ZIndex="1" 
                       Source="{Binding CameraImage}"
                       RenderTransformOrigin="0.5 0.5"
                       >

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDown" >
                            <i:InvokeCommandAction Command="{Binding VideoClickCommand}" 
                                                       PassEventArgsToCommand="True"
                                                       EventArgsConverter="{StaticResource MouseEventArgsConverter}" 
                                                   />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Image.RenderTransform>
                        <ScaleTransform ScaleX="-1"/>
                    </Image.RenderTransform>
                </Image>
                <Canvas VerticalAlignment="Stretch" Panel.ZIndex="1">
                    <Line Stroke="Red" Fill="Red" 
                                              StrokeThickness="1" 
                                              X1="-25" X2="25" Y1="0" Y2="0" 
                                              Canvas.Left="{Binding RelativeSource={RelativeSource AncestorType=Canvas, Mode=FindAncestor}, Path=ActualWidth, Converter={StaticResource DivideConverter}, ConverterParameter=2}" 
                                              Canvas.Top="{Binding RelativeSource={RelativeSource AncestorType=Canvas, Mode=FindAncestor}, Path=ActualHeight, Converter={StaticResource DivideConverter}, ConverterParameter=2}" 
                                              />
                    <Line Stroke="Red" Fill="Red" 
                                              StrokeThickness="1" 
                                              X1="0" X2="0" Y1="-25" Y2="25" 
                                              Canvas.Left="{Binding RelativeSource={RelativeSource AncestorType=Canvas, Mode=FindAncestor}, Path=ActualWidth, Converter={StaticResource DivideConverter}, ConverterParameter=2}" 
                                              Canvas.Top="{Binding RelativeSource={RelativeSource AncestorType=Canvas, Mode=FindAncestor}, Path=ActualHeight, Converter={StaticResource DivideConverter}, ConverterParameter=2}" 
                                              >
                    </Line>
                </Canvas>
                <Canvas Panel.ZIndex="1">
                    <ContentControl 
                        Width="25"
                        MinWidth="20"
                        Height="25"
                        MinHeight="20"
                        Canvas.Left="{Binding RelativeSource={RelativeSource AncestorType=Canvas, Mode=FindAncestor}, Path=ActualWidth, Converter={StaticResource DivideConverter}, ConverterParameter=2}" 
                        Canvas.Top="{Binding RelativeSource={RelativeSource AncestorType=Canvas, Mode=FindAncestor}, Path=ActualHeight, Converter={StaticResource DivideConverter}, ConverterParameter=2}" 
                        Template="{StaticResource DesignerItemTemplate}">

                        <Grid>
                            <Ellipse Stroke="Red" StrokeThickness="1" IsHitTestVisible="False"/>
                            <Rectangle Width="1" Stroke="Yellow" Fill="Yellow" VerticalAlignment="Stretch"/>
                            <Rectangle Height="1" Stroke="Yellow" Fill="Yellow" HorizontalAlignment="Stretch"/>
                        </Grid>
                        <ContentControl.RenderTransform>
                            <TranslateTransform
                                    X="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContentControl}, Path=ActualWidth, Converter={StaticResource DivideConverter}, ConverterParameter=-2}"
                                    Y="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContentControl}, Path=ActualHeight, Converter={StaticResource DivideConverter}, ConverterParameter=-2}"
                                    />
                        </ContentControl.RenderTransform>
                    </ContentControl>
                </Canvas>
                <Canvas x:Name="ScaleMarkers" Panel.ZIndex="1" 
                                            Visibility="{Binding Converter={StaticResource BoolToVisibleConvereter}, 
                                            Path=TeachScaleMarkerEnable}">
                    <Line Stroke="Red" Fill="Red" 
                                                StrokeThickness="1" 
                                                X1="0" 
                                                X2="{Binding RelativeSource={RelativeSource AncestorType=Canvas, Mode=FindAncestor}, Path=ActualWidth}" 
                                                Y2="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Y1}" 
                                                >
                        <Line.Y1>
                            <MultiBinding Converter="{StaticResource MulConvereter}">
                                <Binding RelativeSource="{RelativeSource AncestorType=Canvas, Mode=FindAncestor}" Path="ActualHeight"/>
                                <Binding RelativeSource="{RelativeSource AncestorType=UserControl, Mode=FindAncestor}" Path="DataContext.ScaleMarkersRatioFirst"/>
                            </MultiBinding>
                        </Line.Y1>
                    </Line>
                    <Line Stroke="Red" Fill="Red" 
                              StrokeThickness="1" 
                              X1="0" 
                              X2="{Binding RelativeSource={RelativeSource AncestorType=Canvas, Mode=FindAncestor}, Path=ActualWidth}"                               
                              Y2="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Y1}" 
                              >
                        <Line.Y1>
                            <MultiBinding Converter="{StaticResource MulConvereter}">
                                <Binding RelativeSource="{RelativeSource AncestorType=Canvas, Mode=FindAncestor}" Path="ActualHeight"/>
                                <Binding RelativeSource="{RelativeSource AncestorType=UserControl, Mode=FindAncestor}" Path="DataContext.ScaleMarkersRatioSecond"/>
                            </MultiBinding>
                        </Line.Y1>
                    </Line>
                </Canvas>

                <Grid
                        HorizontalAlignment="Left"
                        VerticalAlignment="Bottom"
                        Width="200"
                        Height="200"
                        Panel.ZIndex="2"
                        Visibility="{Binding SnapshotVisible, Converter={StaticResource Boolean2VisibilityConverter}}"
                    >
                    <ContentControl Content="{Binding SnapShot}"/>
                </Grid>
            </Grid>
        </Border>
    </Grid>
</UserControl>
