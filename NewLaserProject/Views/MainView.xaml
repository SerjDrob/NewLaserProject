<hc:BlurWindow x:Class="NewLaserProject.Views.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:mcl="clr-namespace:MachineClassLibrary.Machine;assembly=MachineClassLibrary"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:cnvrt="clr-namespace:MachineControlsLibrary.Converters;assembly=MachineControlsLibrary"
        mc:Ignorable="d"
        xmlns:hc="https://handyorg.github.io/handycontrol"
        xmlns:clr="clr-namespace:System;assembly=mscorlib"
        xmlns:uc="clr-namespace:MachineControlsLibrary.Controls;assembly=MachineControlsLibrary"
        xmlns:vm="clr-namespace:NewLaserProject.ViewModels"
        xmlns:Localconverters="clr-namespace:NewLaserProject.Views.Converters"
        Title="Лазер" Height="450" Width="800" WindowState="Maximized">
    <Window.InputBindings>
        <KeyBinding Command="{Binding TestCommand}" Key="Q"/>
        <KeyBinding Command="{Binding StartProcessCommand}" Key="Divide"/>

        <KeyBinding Command="{Binding MachineSettingsCommand}" Key="H"/>

        <KeyBinding Command="{Binding GoLeftCommand}" Key="X"/>
        <KeyBinding Command="{Binding GoRightCommand}" Key="C"/>
        <KeyBinding Command="{Binding GoUpCommand}" Key="A"/>
        <KeyBinding Command="{Binding GoDownCommand}" Key="Z"/>
        <KeyBinding Command="{Binding ChangeVelocityCommand}" Key="Add"/>

        <KeyBinding Command="{Binding TeachCameraOffsetCommand}" Key="F2"/>
        <KeyBinding Command="{Binding TeachScanatorHorizontCommand}" Key="F3"/>
        <KeyBinding Command="{Binding TeachOrthXYCommand}" Key="F4"/>
        <KeyBinding Command="{Binding TeachCameraScaleCommand}" Key="F5"/>
        <KeyBinding Command="{Binding LeftWaferCornerTeachCommand}" Key="F6"/>
        <KeyBinding Command="{Binding TeachNextCommand}" Key="Multiply"/>
        <KeyBinding Command="{Binding TeachDenyCommand}" Key="Esc"/>

    </Window.InputBindings>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="KeyDown">
            <i:InvokeCommandAction Command="{Binding KeyDownCommand, Mode=OneWay}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
        <i:EventTrigger EventName="KeyUp">
            <i:InvokeCommandAction Command="{Binding KeyUpCommand, Mode=OneWay}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <cnvrt:DivideConverter x:Key="DivideConverter"/>
        <cnvrt:MulConvereter x:Key="MulConvereter"/>
        <cnvrt:BoolToVisibleConvereter x:Key="BoolToVisibleConvereter"/>
        <cnvrt:GetScaleConverter x:Key="GetScaleConvereter"/>
        <Localconverters:AligningArgsConverter x:Key="AligningArgsConverters"/>
        <clr:Boolean x:Key="TRUE">True</clr:Boolean>
        <clr:Boolean x:Key="FALSE">False</clr:Boolean>

        <Storyboard x:Key="DangerMessage">

            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ImportantIcon"
                                           Storyboard.TargetProperty="Visibility"
                                           
                                           Duration="0:0:1" RepeatBehavior="5x" FillBehavior="Stop"
                                           >
                <ObjectAnimationUsingKeyFrames.KeyFrames>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.8" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames.KeyFrames>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ExclaimMessage">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ImportantMessage"  Storyboard.TargetProperty="Visibility">
                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" />
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimation Storyboard.TargetName="ImportantMessage" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.5"/>
        </Storyboard>
    </Window.Resources>
    <Grid>
        <Grid.Resources>
            <ResourceDictionary>
                <ResourceDictionary.MergedDictionaries>
                    <ResourceDictionary Source="pack://application:,,,/MachineControlsLibrary;component/Controls/Dictionary.xaml"/>
                </ResourceDictionary.MergedDictionaries>
            </ResourceDictionary>
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <DockPanel Grid.Column="2" Grid.RowSpan="2">
            <Border x:Name="ImportantMessage"
                    DockPanel.Dock="Top" 
                    BorderThickness="2" 
                    BorderBrush="Blue"
                    Padding="2"
                    CornerRadius="3"
                    Height="30"
                    >
                <DockPanel>
                    <Image x:Name="ImportantIcon" Source="{Binding IconPath}" DockPanel.Dock="Left" Margin="0,0,5,0"/>
                    <TextBlock x:Name="ImportantText" Text="{Binding TechInfo}" FontWeight="Bold" FontSize="15" Foreground="Red">
                        <i:Interaction.Triggers>
                            <i:PropertyChangedTrigger Binding="{Binding Text, ElementName=ImportantText}">
                                <i:ControlStoryboardAction Storyboard="{StaticResource DangerMessage}"/>                                
                            </i:PropertyChangedTrigger>
                        </i:Interaction.Triggers>
                    </TextBlock>
                </DockPanel>
            </Border>
            <TabControl>
                <TabItem>
                    <TabItem.Header>
                        <Border BorderBrush="CadetBlue" Margin="0,0,10,0" BorderThickness="1" DockPanel.Dock="Top" HorizontalAlignment="Left">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.FileName}" Width="100" Margin="2" Background="LightYellow"/>
                                <Button Command="{Binding OpenFileCommand}" Content="Файл" Style="{StaticResource CommandButton}"/>
                            </StackPanel>
                        </Border>
                    </TabItem.Header>
                    <uc:GraphWindow                         
                           x:Name="GraphWin"
                           LayGeoms="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.LayGeoms}"                                            
                           SpecSizeX="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.FileSizeX}"
                           SpecSizeY="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.FileSizeY}"
                           FieldSizeX="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.FieldSizeX}"
                           FieldSizeY="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.FieldSizeY}"
                           SpecMargin="0.2" 
                           AutoProportion="True"
                           StrokeThickness="0.1"  
                           IgnoredLayers="{Binding IgnoredLayers}" 
                           RenderTransformOrigin="0.5,0.5"
                           SelectedColor="Black"           
                           MirrorX="{Binding Mode=TwoWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.MirrorX}"
                           Angle90="{Binding Mode=TwoWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.WaferTurn90}"
                           OffsetX="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.WaferOffsetX}"                           
                           OffsetY="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.WaferOffsetY}" 
                           PointerDiameter="2000"
                           PointerThickness="200"
                           PointerX="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.TeacherPointerX}"
                           PointerY="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.TeacherPointerY}"
                           PointerVisibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.TeacherPointerVisibility}"
                           >


                        <uc:SpecCross 
                                    X="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.ViewfinderX}" 
                                    Y="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext.ViewfinderY}" 
                                    Color="Red"                                
                                    XScale="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=uc:GraphWindow}, Path=ScaleX}" 
                                    YScale="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=uc:GraphWindow}, Path=ScaleY}"
                                    OffsetX="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=uc:GraphWindow}, Path=MarginX}" 
                                    OffsetY="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=uc:GraphWindow}, Path=MarginY}"                                     
                                    Thickness="3">
                            <uc:SpecCross.RenderTransform>
                                <ScaleTransform ScaleY="-1" CenterY="460.5"/>
                            </uc:SpecCross.RenderTransform>
                        </uc:SpecCross>
                    </uc:GraphWindow>
                </TabItem>
                <TabItem Header="Настройки" IsEnabled="{Binding IsFileSettingsEnable}">
                    <DockPanel>
                        <ContentControl DockPanel.Dock="Left" Content="{Binding LPModel}"/>
                        <ContentControl x:Name="TW" Content="{Binding TWModel, Mode=TwoWay}"/>
                    </DockPanel>
                </TabItem>
            </TabControl>
        </DockPanel>
        <Border BorderBrush="Black" BorderThickness="2">
            <DockPanel>
                <ToolBarTray DockPanel.Dock="Top">
                    <ToolBar>
                        <Label Content="Качество видео" />
                        <ComboBox ItemsSource="{Binding CameraCapabilities}"
                                  SelectedIndex="{Binding CameraCapabilitiesIndex}"
                                  MinWidth="100">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding CameraCapabilitiesChangedCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ComboBox>

                        <Menu Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Background}">
                            <MenuItem>
                                <MenuItem.Header>
                                    <Image Source="/Views/learning.png" Height="20"/>
                                </MenuItem.Header>
                                <MenuItem Command="{Binding TeachCameraOffsetCommand}" Header="Смещение камеры" InputGestureText="F2">
                                    <MenuItem.Icon>
                                        <Image Source="/Views/distance-32.png" Height="20" RenderTransformOrigin="0.5,0.5"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Command="{Binding TeachScanatorHorizontCommand}" Header="Горизонт сканатора" InputGestureText="F3">
                                    <MenuItem.Icon>
                                        <Image Source="/Views/angle.png" Height="20" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Command="{Binding TeachOrthXYCommand}" Header="Ортогональность XY" InputGestureText="F4">
                                    <MenuItem.Icon>
                                        <Image Source="/Views/orth.png" Height="20" StretchDirection="Both"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                            </MenuItem>
                        </Menu>
                    </ToolBar>
                </ToolBarTray>
                <Grid>
                    <Image x:Name="VideoCamera" Panel.ZIndex="1" Source="{Binding CameraImage}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDown" >
                                <i:InvokeCommandAction Command="{Binding VideoClickCommand}" 
                                                       PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Image>
                    <Canvas VerticalAlignment="Stretch" Panel.ZIndex="1">
                        <Line Stroke="Red" Fill="Red" 
                              StrokeThickness="3" 
                              X1="-25" X2="25" Y1="0" Y2="0" 
                              Canvas.Left="{Binding RelativeSource={RelativeSource AncestorType=Canvas, Mode=FindAncestor}, Path=ActualWidth, Converter={StaticResource DivideConverter}, ConverterParameter=2}" 
                              Canvas.Top="{Binding RelativeSource={RelativeSource AncestorType=Canvas, Mode=FindAncestor}, Path=ActualHeight, Converter={StaticResource DivideConverter}, ConverterParameter=2}" 
                              />
                        <Line Stroke="Red" Fill="Red" 
                              StrokeThickness="3" 
                              X1="0" X2="0" Y1="-25" Y2="25" 
                              Canvas.Left="{Binding RelativeSource={RelativeSource AncestorType=Canvas, Mode=FindAncestor}, Path=ActualWidth, Converter={StaticResource DivideConverter}, ConverterParameter=2}" 
                              Canvas.Top="{Binding RelativeSource={RelativeSource AncestorType=Canvas, Mode=FindAncestor}, Path=ActualHeight, Converter={StaticResource DivideConverter}, ConverterParameter=2}" 
                              >
                        </Line>

                        <Ellipse Width="25" Height="25" StrokeThickness="2" Stroke="Red"
                                
                                  Canvas.Left="{Binding RelativeSource={RelativeSource AncestorType=Canvas, Mode=FindAncestor}, Path=ActualWidth, Converter={StaticResource DivideConverter}, ConverterParameter=2}" 
                                  Canvas.Top="{Binding RelativeSource={RelativeSource AncestorType=Canvas, Mode=FindAncestor}, Path=ActualHeight, Converter={StaticResource DivideConverter}, ConverterParameter=2}" 
                                 >
                            <Ellipse.RenderTransform>
                                <TranslateTransform
                                    X="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Ellipse}, Path=ActualWidth, Converter={StaticResource DivideConverter}, ConverterParameter=-2}"
                                    Y="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Ellipse}, Path=ActualHeight, Converter={StaticResource DivideConverter}, ConverterParameter=-2}"
                                    
                                    />
                            </Ellipse.RenderTransform>
                        </Ellipse>
                    </Canvas>
                    <Canvas x:Name="ScaleMarkers" Panel.ZIndex="1" 
                            Visibility="{Binding Converter={StaticResource BoolToVisibleConvereter}, Path=TeachScaleMarkerEnable}">
                        <Line Stroke="Red" Fill="Red" 
                              StrokeThickness="1" 
                              X1="0" 
                              X2="{Binding RelativeSource={RelativeSource AncestorType=Canvas, Mode=FindAncestor}, Path=ActualWidth}" 
                              
                              Y2="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Y1}" 
                              >
                            <Line.Y1>
                                <MultiBinding Converter="{StaticResource MulConvereter}">
                                    <Binding RelativeSource="{RelativeSource AncestorType=Canvas, Mode=FindAncestor}" Path="ActualHeight"/>
                                    <Binding RelativeSource="{RelativeSource AncestorType=Window, Mode=FindAncestor}" Path="DataContext.ScaleMarkersRatioFirst"/>
                                </MultiBinding>
                            </Line.Y1>
                        </Line>
                        <Line Stroke="Red" Fill="Red" 
                              StrokeThickness="1" 
                              X1="0" 
                              X2="{Binding RelativeSource={RelativeSource AncestorType=Canvas, Mode=FindAncestor}, Path=ActualWidth}"                               
                              Y2="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Y1}" 
                              >
                            <Line.Y1>
                                <MultiBinding Converter="{StaticResource MulConvereter}">
                                    <Binding RelativeSource="{RelativeSource AncestorType=Canvas, Mode=FindAncestor}" Path="ActualHeight"/>
                                    <Binding RelativeSource="{RelativeSource AncestorType=Window, Mode=FindAncestor}" Path="DataContext.ScaleMarkersRatioSecond"/>
                                </MultiBinding>
                            </Line.Y1>
                        </Line>
                    </Canvas>
                </Grid>
            </DockPanel>
        </Border>
        <ToolBarTray Orientation="Vertical" Grid.Column="1" Grid.RowSpan="2">
            <ToolBar>
                <Button Command="{Binding StartProcessCommand}">
                    <Button.ToolTip>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Запустить процесс"/>
                            <TextBlock Foreground="Blue" FontWeight="DemiBold"  Text=" /"/>
                        </StackPanel>
                    </Button.ToolTip>
                    <Image Source="Sources/laserbeam_laser_13620.png" Height="20"/>

                </Button>
                <Button Command="{Binding MachineSettingsCommand}">
                    <Button.ToolTip>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Настройки приводов"/>
                            <TextBlock Foreground="Blue" FontWeight="DemiBold"  Text=" H"/>
                        </StackPanel>
                    </Button.ToolTip>
                    <Image Source="Sources/settings.png" Height="20"/>
                </Button>
                <Menu Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Background}">
                    <MenuItem>
                        <MenuItem.Header>
                            <Image Source="Sources/learning.png" Height="20"/>
                        </MenuItem.Header>
                        <MenuItem Command="{Binding TeachCameraOffsetCommand}" Header="Смещение камеры" InputGestureText="F2">
                            <MenuItem.Icon>
                                <Image Source="Sources/distance-32.png" Height="20" RenderTransformOrigin="0.5,0.5"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Command="{Binding TeachScanatorHorizontCommand}" Header="Горизонт сканатора" InputGestureText="F3">
                            <MenuItem.Icon>
                                <Image Source="Sources/angle.png" Height="20" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Command="{Binding TeachOrthXYCommand}" Header="Ортогональность XY" InputGestureText="F4">
                            <MenuItem.Icon>
                                <Image Source="Sources/orth.png" Height="20"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Command="{Binding TeachCameraScaleCommand}" Header="Масштаб видео" InputGestureText="F5">
                            <MenuItem.Icon>
                                <Image Source="Sources/scale.png" Height="20"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                </Menu>
                <hc:SplitButton>
                    <hc:SplitButton.Content>
                        <Image Source="Sources/learning.png" Height="20"/>
                    </hc:SplitButton.Content>
                    <hc:SplitButton.DropDownContent>
                        <StackPanel>
                            <MenuItem Command="{Binding TeachCameraOffsetCommand}" Header="Смещение камеры" InputGestureText="F2">
                                <MenuItem.Icon>
                                    <Image Source="Sources/distance-32.png" Height="20" RenderTransformOrigin="0.5,0.5"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Command="{Binding TeachScanatorHorizontCommand}" Header="Горизонт сканатора" InputGestureText="F3">
                                <MenuItem.Icon>
                                    <Image Source="Sources/angle.png" Height="20" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Command="{Binding TeachOrthXYCommand}" Header="Ортогональность XY" InputGestureText="F4">
                                <MenuItem.Icon>
                                    <Image Source="Sources/orth.png" Height="20"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Command="{Binding TeachCameraScaleCommand}" Header="Масштаб видео" InputGestureText="F5">
                                <MenuItem.Icon>
                                    <Image Source="Sources/scale.png" Height="20"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </StackPanel>
                    </hc:SplitButton.DropDownContent>
                </hc:SplitButton>
            </ToolBar>
            <ToolBar>
                <Button Command="{Binding AlignWaferCommand}"  Content="Right">
                    <Button.CommandParameter>
                        <MultiBinding Converter="{StaticResource AligningArgsConverters}">
                            <Binding ElementName="GraphWin" Path="ScaleX"/>
                            <Binding ElementName="GraphWin" Path="ScaleY"/>
                            <Binding Source="{x:Static vm:Aligning.Right}"/>
                        </MultiBinding>
                    </Button.CommandParameter>
                </Button>
                <Button Command="{Binding AlignWaferCommand}" Content="Left">
                    <Button.CommandParameter>
                        <MultiBinding Converter="{StaticResource AligningArgsConverters}">
                            <Binding ElementName="GraphWin" Path="ScaleX"/>
                            <Binding ElementName="GraphWin" Path="ScaleY"/>
                            <Binding Source="{x:Static vm:Aligning.Left}"/>
                        </MultiBinding>
                    </Button.CommandParameter>
                </Button>
                <Button Command="{Binding AlignWaferCommand}"  Content="Top">
                    <Button.CommandParameter>
                        <MultiBinding Converter="{StaticResource AligningArgsConverters}">
                            <Binding ElementName="GraphWin" Path="ScaleX"/>
                            <Binding ElementName="GraphWin" Path="ScaleY"/>
                            <Binding Source="{x:Static vm:Aligning.Top}"/>
                        </MultiBinding>
                    </Button.CommandParameter>
                </Button>
                <Button Command="{Binding AlignWaferCommand}" Content="Bottom">
                    <Button.CommandParameter>
                        <MultiBinding Converter="{StaticResource AligningArgsConverters}">
                            <Binding ElementName="GraphWin" Path="ScaleX"/>
                            <Binding ElementName="GraphWin" Path="ScaleY"/>
                            <Binding Source="{x:Static vm:Aligning.Bottom}"/>
                        </MultiBinding>
                    </Button.CommandParameter>
                </Button>
                <Button Command="{Binding AlignWaferCommand}"  Content="Center">
                    <Button.CommandParameter>
                        <MultiBinding Converter="{StaticResource AligningArgsConverters}">
                            <Binding ElementName="GraphWin" Path="ScaleX"/>
                            <Binding ElementName="GraphWin" Path="ScaleY"/>
                            <Binding Source="{x:Static vm:Aligning.Center}"/>
                        </MultiBinding>
                    </Button.CommandParameter>
                </Button>
                <Button Command="{Binding AlignWaferCommand}" Content="RT">
                    <Button.CommandParameter>
                        <MultiBinding Converter="{StaticResource AligningArgsConverters}">
                            <Binding ElementName="GraphWin" Path="ScaleX"/>
                            <Binding ElementName="GraphWin" Path="ScaleY"/>
                            <Binding Source="{x:Static vm:Aligning.RTCorner}"/>
                        </MultiBinding>
                    </Button.CommandParameter>
                </Button>
                <Button Command="{Binding AlignWaferCommand}"  Content="RB">
                    <Button.CommandParameter>
                        <MultiBinding Converter="{StaticResource AligningArgsConverters}">
                            <Binding ElementName="GraphWin" Path="ScaleX"/>
                            <Binding ElementName="GraphWin" Path="ScaleY"/>
                            <Binding Source="{x:Static vm:Aligning.RBCorner}"/>
                        </MultiBinding>
                    </Button.CommandParameter>
                </Button>
                <Button Command="{Binding AlignWaferCommand}" Content="LT">
                    <Button.CommandParameter>
                        <MultiBinding Converter="{StaticResource AligningArgsConverters}">
                            <Binding ElementName="GraphWin" Path="ScaleX"/>
                            <Binding ElementName="GraphWin" Path="ScaleY"/>
                            <Binding Source="{x:Static vm:Aligning.LTCorner}"/>
                        </MultiBinding>
                    </Button.CommandParameter>
                </Button>
                <Button Command="{Binding AlignWaferCommand}" Content="LB">
                    <Button.CommandParameter>
                        <MultiBinding Converter="{StaticResource AligningArgsConverters}">
                            <Binding ElementName="GraphWin" Path="ScaleX"/>
                            <Binding ElementName="GraphWin" Path="ScaleY"/>
                            <Binding Source="{x:Static vm:Aligning.LBCorner}"/>
                        </MultiBinding>
                    </Button.CommandParameter>
                </Button>
                <Button Command="{Binding TeachTheDimensionCommand}" 
                        CommandParameter="{StaticResource TRUE}"
                        Content="HorDim"/>
                <Button Command="{Binding TeachTheDimensionCommand}" 
                        CommandParameter="{StaticResource FALSE}"
                        Content="VerDim"/>
            </ToolBar>
        </ToolBarTray>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.Resources>
                <Style TargetType="Border">
                    <Setter Property="BorderBrush" Value="Green"/>
                </Style>
            </Grid.Resources>
            <DockPanel Grid.Column="1">
                <WrapPanel DockPanel.Dock="Bottom">
                    <uc:AxisState CoordinateName="X" 
                                  Coordinate="{Binding XAxis.Position}"
                                  LmtNeg="{Binding XAxis.NLmt}"
                                  LmtPos="{Binding XAxis.PLmt}"
                                  MotionDone="{Binding XAxis.MotionDone}" 
                                  CmdCoordinate="{Binding XAxis.CmdPosition}"
                                  />
                    <uc:AxisState CoordinateName="Y"
                                  Coordinate="{Binding YAxis.Position}"
                                  LmtNeg="{Binding YAxis.NLmt}"
                                  LmtPos="{Binding YAxis.PLmt}"
                                  MotionDone="{Binding YAxis.MotionDone}"
                                  CmdCoordinate="{Binding YAxis.CmdPosition}"
                                  />
                    <uc:AxisState CoordinateName="Z"
                                  Coordinate="{Binding ZAxis.Position}"
                                  LmtNeg="{Binding ZAxis.NLmt}"
                                  LmtPos="{Binding ZAxis.PLmt}"
                                  MotionDone="{Binding ZAxis.MotionDone}"
                                  CmdCoordinate="{Binding ZAxis.CmdPosition}"
                                  />
                    <TextBlock x:Name="VelText" Text="Быстро">
                        <i:Interaction.Triggers>
                            <i:DataTrigger Binding="{Binding VelocityRegime}" Value="{x:Static mcl:Velocity.Fast}">
                                <i:ChangePropertyAction TargetObject="{Binding ElementName=VelText}" PropertyName="Text" Value="Быстро"/>
                            </i:DataTrigger>
                            <i:DataTrigger Binding="{Binding VelocityRegime}" Value="{x:Static mcl:Velocity.Slow}">
                                <i:ChangePropertyAction TargetObject="{Binding ElementName=VelText}" PropertyName="Text" Value="Медленно"/>
                            </i:DataTrigger>
                        </i:Interaction.Triggers>
                    </TextBlock>
                </WrapPanel>
                <Grid RenderTransformOrigin="0.5,0.5">
                    <Border
                            BorderBrush="Green"
                            BorderThickness="3"
                            Height="{Binding YDimension}"
                            Width="{Binding XDimension}"
                            >
                        <Grid>
                            <Canvas RenderTransformOrigin="0.5,0.5">
                                <Rectangle
                                    Stroke="Blue"
                                    Fill="AliceBlue"
                                    Width="{Binding WaferWidth}"
                                    Height="{Binding WaferHeight}"
                                    Canvas.Left="{Binding XAxis.Position}"
                                    Canvas.Bottom="{Binding YAxis.Position}"
                                    >
                                    <Rectangle.RenderTransform>
                                        <ScaleTransform ScaleY="1" ScaleX="-1"/>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                                <Ellipse 
                                        x:Name="CameraCircle"
                                    Width="6" 
                                    Height="6" 
                                    StrokeThickness="1"
                                    Stroke="Black"
                                    Canvas.Left="{Binding CameraPosX}"
                                    Canvas.Bottom="{Binding CameraPosY}"
                                    >
                                    <Ellipse.RenderTransform>
                                        <TranslateTransform X="-3" Y="3"/>
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                                <Ellipse 
                                        Width="6" 
                                        Height="6"  
                                        StrokeThickness="1"
                                        Stroke="Red"
                                        Canvas.Left="{Binding CameraPosX}"
                                        Canvas.Bottom="{Binding CameraPosY}"
                                        >
                                    <Ellipse.RenderTransform>
                                        <TransformGroup>
                                            <TranslateTransform X="-3" Y="3"/>
                                            <TranslateTransform
                                            X="{Binding LaserCameraOffsetX}"
                                            Y="{Binding LaserCameraOffsetY}"                                            
                                            />
                                        </TransformGroup>
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                                <Ellipse 
                                    Width="2" 
                                    Height="2" 
                                    Fill="Red"   
                                    Canvas.Left="0"
                                    Canvas.Bottom="0"
                                    >
                                    <Ellipse.RenderTransform>
                                        <TranslateTransform X="-1" Y="1"/>
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                                <Canvas.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="-1"/>
                                        <TranslateTransform X="{Binding XDimensionOffset}"
                                                            Y="{Binding YDimensionOffset}"
                                                            />
                                    </TransformGroup>
                                </Canvas.RenderTransform>
                            </Canvas>
                        </Grid>
                    </Border>
                    <Grid.RenderTransform>
                        <ScaleTransform ScaleX="2" ScaleY="2"/>
                    </Grid.RenderTransform>
                </Grid>
            </DockPanel>
        </Grid>

    </Grid>
</hc:BlurWindow>
