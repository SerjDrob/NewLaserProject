<hc:GlowWindow
        x:Class="NewLaserProject.Views.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:mcl="clr-namespace:MachineClassLibrary.Machine;assembly=MachineClassLibrary"    
        xmlns:hc="https://handyorg.github.io/handycontrol" 
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors" 
        xmlns:vm="clr-namespace:NewLaserProject.ViewModels"  
        xmlns:classes="clr-namespace:NewLaserProject.Classes"
        xmlns:controls="clr-namespace:MachineControlsLibrary.Controls;assembly=MachineControlsLibrary"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"   
        ActiveGlowColor="{DynamicResource PrimaryColor}"    
        Title="ТЕМП-ЛР50"    
        WindowState="Maximized"
        ResizeMode="CanResize">
    
    <hc:GlowWindow.InputBindings>
        <KeyBinding Command="{Binding GesturePressedCommand}" CommandParameter="{x:Static vm:Compass.SW}" Gesture="CTRL+1"/>
        <KeyBinding Command="{Binding GesturePressedCommand}" CommandParameter="{x:Static vm:Compass.SE}" Gesture="CTRL+2"/>
        <KeyBinding Command="{Binding GesturePressedCommand}" CommandParameter="{x:Static vm:Compass.NW}" Gesture="CTRL+3"/>
        <KeyBinding Command="{Binding GesturePressedCommand}" CommandParameter="{x:Static vm:Compass.NE}" Gesture="CTRL+4"/>
        <KeyBinding Command="{Binding GesturePressedCommand}" CommandParameter="{x:Static vm:Compass.W}" Modifiers="Ctrl" Key="Left"/>
        <KeyBinding Command="{Binding GesturePressedCommand}" CommandParameter="{x:Static vm:Compass.E}" Modifiers="Ctrl" Key="Right"/>
        <KeyBinding Command="{Binding GesturePressedCommand}" CommandParameter="{x:Static vm:Compass.N}" Modifiers="Ctrl" Key="Up"/>
        <KeyBinding Command="{Binding GesturePressedCommand}" CommandParameter="{x:Static vm:Compass.S}" Modifiers="Ctrl" Key="Down"/>
        <KeyBinding Command="{Binding GesturePressedCommand}" CommandParameter="{x:Static vm:Compass.CenterV}" Modifiers="Ctrl" Key="V"/>
        <KeyBinding Command="{Binding GesturePressedCommand}" CommandParameter="{x:Static vm:Compass.CenterH}" Modifiers="Ctrl" Key="H"/>
        <!--<KeyBinding Command="{Binding ChangeMechViewCommand}" Key="W"/>-->
    </hc:GlowWindow.InputBindings>
    
    <hc:GlowWindow.Resources>        
        <CollectionViewSource x:Key="FileLayers" Source="{Binding LayGeoms}"/>
        <CollectionViewSource x:Key="ProcObjects" Source="{Binding ProcessingObjects}"/>        
    </hc:GlowWindow.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="KeyDown">
            <i:InvokeCommandAction Command="{Binding TestKeyCommand, Mode=OneWay}" 
                                   PassEventArgsToCommand="True"
                                   EventArgsConverter="{StaticResource KeyProcessorArgsConverter}"
                                   EventArgsConverterParameter="{StaticResource TRUE}"/>
        </i:EventTrigger>

        <i:EventTrigger EventName="KeyUp">
            <i:InvokeCommandAction Command="{Binding TestKeyCommand, Mode=OneWay}" 
                                   PassEventArgsToCommand="True"
                                   EventArgsConverter="{StaticResource KeyProcessorArgsConverter}"
                                   EventArgsConverterParameter="{StaticResource FALSE}"
                                   />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <ToolBarTray Margin="1" Orientation="Vertical" VerticalAlignment="Stretch">
            <ToolBar>
                <ToolBar.Resources>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    </Style>
                </ToolBar.Resources>
                <Grid MinHeight="45">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Border Style="{StaticResource ToolBorder}">
                        <Path Data="{StaticResource MotionDeviceGeometry}"
                              RenderTransformOrigin="0.5,0.5"
                              Stretch="Uniform"                              
                              >
                            <Path.RenderTransform>
                                <ScaleTransform ScaleY="-1"/>
                            </Path.RenderTransform>
                            <Path.Style>
                                <Style TargetType="Path">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsMotionInitialized}" Value="False">
                                            <Setter Property="Fill" Value="{StaticResource DangerBrush}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsMotionInitialized}" Value="True">
                                            <Setter Property="Fill" Value="{StaticResource SuccessBrush}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Path.Style>
                        </Path>
                    </Border>
                    <hc:Divider Orientation="Vertical" Grid.Column="1"/>
                    <Border Style="{StaticResource ToolBorder}" Grid.Column="2">
                        <Path x:Name="InitLaserIcon"
                              Data="{StaticResource LaserGeometry}"                              
                              RenderTransformOrigin="0.5,0.5"
                              Stretch="Uniform"
                              >
                            <Path.RenderTransform>
                                <ScaleTransform ScaleY="-1"/>
                            </Path.RenderTransform>

                            <Path.Style>
                                <Style TargetType="Path">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsLaserInitialized}" Value="False">
                                            <Setter Property="Fill" Value="{StaticResource DangerBrush}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsLaserInitialized}" Value="True">
                                            <Setter Property="Fill" Value="{StaticResource SuccessBrush}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Path.Style>
                        </Path>
                    </Border>
                </Grid>
                <Menu Style="{StaticResource MenuBaseStyle}" BorderBrush="{StaticResource BorderBrush}" BorderThickness="1">
                    <Menu.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel Orientation="Vertical"/>
                        </ItemsPanelTemplate>
                    </Menu.ItemsPanel>
                    <MenuItem>
                        <MenuItem.Header>
                            <DockPanel LastChildFill="True" Margin="4">
                                <Path Data="{StaticResource DownGeometry}" 
                                                      DockPanel.Dock="Right"
                                                      Fill="{StaticResource PrimaryTextBrush}" 
                                                      Stretch="Uniform" 
                                      Margin="20,0,0,0"
                                                      Width="14"/>
                                <Path Data="{StaticResource SpurGearGeometry}" 
                                                      DockPanel.Dock="Left"
                                      Margin="12,0"
                                      Stretch="Uniform"
                                      VerticalAlignment="Center"
                                                      Fill="{StaticResource PrimaryTextBrush}" 
                                                      >
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="2" ScaleY="2"/>
                                            <TranslateTransform Y="-5"/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </DockPanel>
                        </MenuItem.Header>
                        <MenuItem Command="{Binding MachineSettingsCommand}"
                                  Header="Настройки приводов"/>
                        <MenuItem Command="{Binding LasSettingsCommand}"
                                      Header="Настройки лазера"/>
                        <MenuItem Header="Предпочтения">
                            <MenuItem Command="{Binding OpenPenHatchSettingsCommand}"
                                      Header="Настройки пера и штриховки"/>
                            <MenuItem Command="{Binding OpenFileViewSettingsWindowCommand}"
                                      Header="Отображение файла"/>
                            <MenuItem Command="{Binding OpenMarkSettingsCommand}"
                                      Header="Технология маркировки"/>
                            <MenuItem Command="{Binding OpenSpecimenSettingsWindowCommand}" Visibility="Collapsed"
                                      Header="Ориентация подложки"/>
                            <MenuItem Command="{Binding CameraSettingsCommand}">
                                <MenuItem.Header>
                                    <hc:ComboBox ItemsSource="{Binding CameraCapabilities}"
                                                 SelectedIndex="{Binding CameraCapabilitiesIndex}"
                                                 hc:InfoElement.Placeholder="Камера не подключена"
                                                 Width="260"
                                                 hc:TitleElement.Title="Настройки видео" 
                                                 hc:TitleElement.TitlePlacement="Left"
                                                 hc:TitleElement.TitleWidth="120"
                                                 Style="{StaticResource ComboBoxExtend}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding CameraCapabilitiesChangedCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </hc:ComboBox>
                                </MenuItem.Header>
                            </MenuItem>
                        </MenuItem>
                    </MenuItem>
                </Menu>
                <hc:SplitButton hc:IconElement.Geometry="{StaticResource AcademicHatGeometry}" HorizontalAlignment="Stretch">
                    <hc:SplitButton.DropDownContent>
                        <StackPanel>
                            <MenuItem Command="{Binding StartTeachingCommand}"
                                      CommandParameter="{x:Static vm:Teacher.CameraOffset}"
                                      Header="Смещение камеры" InputGestureText="F2">
                                <MenuItem.Icon>
                                    <Image Source="Sources/distance-32.png" Height="20" RenderTransformOrigin="0.5,0.5"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Command="{Binding StartTeachingCommand}" 
                                      CommandParameter="{x:Static vm:Teacher.ScanatorHorizont}"
                                      Header="Горизонт сканатора">
                                <MenuItem.Icon>
                                    <Image Source="Sources/angle.png" Height="20" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Command="{Binding StartTeachingCommand}" 
                                      CommandParameter="{x:Static vm:Teacher.OrthXY}"
                                      Header="Ортогональность XY">
                                <MenuItem.Icon>
                                    <Image Source="Sources/orth.png" Height="20"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Command="{Binding StartTeachingCommand}" 
                                      CommandParameter="{x:Static vm:Teacher.CameraScale}"
                                      Header="Масштаб видео">
                                <MenuItem.Icon>
                                    <Image Source="Sources/scale.png" Height="20"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </StackPanel>
                    </hc:SplitButton.DropDownContent>
                </hc:SplitButton>

            </ToolBar>
            <ToolBar Style="{StaticResource ToolBarBaseStyle}">
                <Button Command="{Binding ChooseMaterialCommand}" HorizontalAlignment="Stretch" MinHeight="50">
                    <hc:AdornerElement.Instance>
                        <hc:Poptip Content="Введите параметры подложки" PlacementType="TopLeft"/>
                    </hc:AdornerElement.Instance>
                    <StackPanel HorizontalAlignment="Center">
                        <TextBlock Text="Подложка" Style="{StaticResource TextBlockDefaultBold}" Margin="0,0,0,3"/>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" >
                            <StackPanel.Resources>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockDefaultInfo}"/>
                            </StackPanel.Resources>
                            <TextBlock Text="{Binding WaferWidth}"/>
                            <TextBlock Text="X"/>
                            <TextBlock Text="{Binding WaferHeight}"/>
                            <TextBlock Text="X"/>
                            <TextBlock Text="{Binding WaferThickness}"/>
                        </StackPanel>
                    </StackPanel>
                </Button>
                <controls:AxisState CoordinateName="X"
                                  Coordinate="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.XAxis.Position}"  
                                  LmtNeg="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.XAxis.NLmt}"
                                  LmtPos="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.XAxis.PLmt}"
                                  MotionDone="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.XAxis.MotionDone}" 
                                  CmdCoordinate="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.XAxis.CmdPosition}"
                                  />
                <controls:AxisState CoordinateName="Y"
                                  Coordinate="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.YAxis.Position}"
                                  LmtNeg="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.YAxis.NLmt}"
                                  LmtPos="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.YAxis.PLmt}"
                                  MotionDone="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.YAxis.MotionDone}"
                                  CmdCoordinate="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.YAxis.CmdPosition}"
                                  />
                <controls:AxisState CoordinateName="Z"
                                  Coordinate="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.ZAxis.Position}"
                                  LmtNeg="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.ZAxis.NLmt}"
                                  LmtPos="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.ZAxis.PLmt}"
                                  MotionDone="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.ZAxis.MotionDone}"
                                  CmdCoordinate="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.ZAxis.CmdPosition}"
                                  />
                <DockPanel>
                    <Border
                        DockPanel.Dock="Top"
                        Height="60"
                        Style="{StaticResource BorderRegion}"
                        Padding="0"
                        >
                        <Grid>
                            <Grid Margin="8">
                                <i:Interaction.Triggers>
                                    <i:DataTrigger Binding="{Binding VelocityRegime}" Value="{x:Static mcl:Velocity.Fast}">
                                        <i:ChangePropertyAction PropertyName="Visibility" Value="Visible"/>
                                    </i:DataTrigger>
                                    <i:DataTrigger Binding="{Binding VelocityRegime}" Value="{x:Static mcl:Velocity.Slow}">
                                        <i:ChangePropertyAction PropertyName="Visibility" Value="Hidden"/>
                                    </i:DataTrigger>
                                </i:Interaction.Triggers>
                                <Path Data="{StaticResource HighSpeedGeometry}" 
                                      Fill="{DynamicResource DangerBrush}"
                                      Stretch="Uniform"
                                      RenderTransformOrigin="0.5, 0.5"
                                    >
                                    <Path.RenderTransform>
                                        <ScaleTransform ScaleY="-1"/>
                                    </Path.RenderTransform>
                                </Path>
                                <Path Data="{StaticResource HighSpeedArrowGeometry}" 
                                      Fill="{StaticResource DarkPrimaryBrush}"
                                      Stretch="UniformToFill"
                                      RenderTransformOrigin="0.5, 0.5"
                                      >
                                    <Path.RenderTransform>
                                        <ScaleTransform ScaleY="-1"/>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                            <Grid Margin="8">

                                <i:Interaction.Triggers>
                                    <i:DataTrigger Binding="{Binding VelocityRegime}" Value="{x:Static mcl:Velocity.Fast}">
                                        <i:ChangePropertyAction PropertyName="Visibility" Value="Hidden"/>
                                    </i:DataTrigger>
                                    <i:DataTrigger Binding="{Binding VelocityRegime}" Value="{x:Static mcl:Velocity.Slow}">
                                        <i:ChangePropertyAction PropertyName="Visibility" Value="Visible"/>
                                    </i:DataTrigger>
                                </i:Interaction.Triggers>
                                <Path Data="{StaticResource LowSpeedGeometry}" 
                                      Fill="{DynamicResource SuccessBrush}"
                                      Stretch="Uniform"
                                      RenderTransformOrigin="0.5, 0.5"
                                    >
                                    <Path.RenderTransform>
                                        <ScaleTransform ScaleY="-1"/>
                                    </Path.RenderTransform>
                                </Path>
                                <Path Data="{StaticResource LowSpeedArrowGeometry}" 
                              Fill="{DynamicResource DarkPrimaryBrush}"
                                    Stretch="UniformToFill"
                                    RenderTransformOrigin="0.5, 0.5"
                                    >
                                    <Path.RenderTransform>
                                        <ScaleTransform ScaleY="-1"/>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                            <Grid>
                                <i:Interaction.Triggers>
                                    <i:DataTrigger Binding="{Binding VelocityRegime}" Value="{x:Static mcl:Velocity.Fast}">
                                        <i:ChangePropertyAction PropertyName="Visibility" Value="Hidden"/>
                                    </i:DataTrigger>
                                    <i:DataTrigger Binding="{Binding VelocityRegime}" Value="{x:Static mcl:Velocity.Slow}">
                                        <i:ChangePropertyAction PropertyName="Visibility" Value="Hidden"/>
                                    </i:DataTrigger>
                                    <i:DataTrigger Binding="{Binding VelocityRegime}" Value="{x:Static mcl:Velocity.Step}">
                                        <i:ChangePropertyAction PropertyName="Visibility" Value="Visible"/>
                                    </i:DataTrigger>
                                </i:Interaction.Triggers>
                                <Label Content="ШАГ"
                                       HorizontalAlignment="Stretch"
                                       Height="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=ActualHeight}"
                                       Style="{StaticResource LabelDanger}"
                                       />
                            </Grid>
                        </Grid>
                    </Border>
                </DockPanel>
            </ToolBar>
            <ToolBar>
                <ToggleButton HorizontalAlignment="Stretch" Height="70">
                    <DockPanel LastChildFill="True">
                        <TextBlock DockPanel.Dock="Top" Text="Вид" FontWeight="Bold" HorizontalAlignment="Center" Margin="0,0,0,5"/>
                        <hc:ToggleBlock DockPanel.Dock="Bottom" IsChecked="{Binding IsMechViewChecked, Mode=OneWay}">
                            <hc:ToggleBlock.UnCheckedContent>
                                <hc:SimpleStackPanel Orientation="Horizontal">
                                    <Path Data="{StaticResource CadView2Geometry}" Stretch="Uniform" Stroke="{StaticResource SuccessBrush}" StrokeThickness="1.5" Margin="2"/>
                                    <Path Data="{StaticResource Equipment2Geometry}" Stretch="Uniform" Stroke="White" StrokeThickness="1" Margin="5"/>
                                </hc:SimpleStackPanel>
                            </hc:ToggleBlock.UnCheckedContent>
                            <hc:ToggleBlock.CheckedContent>
                                <hc:SimpleStackPanel Orientation="Horizontal">
                                    <Path Data="{StaticResource CadView2Geometry}" Stretch="Uniform" Stroke="White" StrokeThickness="1" Margin="5"/>
                                    <Path Data="{StaticResource Equipment2Geometry}" Stretch="Uniform" Stroke="{StaticResource SuccessBrush}" StrokeThickness="1.5" Margin="2"/>
                                </hc:SimpleStackPanel>
                            </hc:ToggleBlock.CheckedContent>
                        </hc:ToggleBlock>
                    </DockPanel>
                    <i:Interaction.Triggers>
                        <i:PropertyChangedTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=IsChecked}">
                            <i:InvokeCommandAction Command="{Binding ChangeMechViewCommand}"/>
                        </i:PropertyChangedTrigger>
                    </i:Interaction.Triggers>
                </ToggleButton>                
            </ToolBar>
            <ToolBar Visibility="Collapsed">
                <hc:TextBox Text="{Binding TestX}" hc:TitleElement.Title="TestX" hc:TitleElement.TitlePlacement="Left"/>
                <hc:TextBox Text="{Binding TestY}" hc:TitleElement.Title="TestY" hc:TitleElement.TitlePlacement="Left"/>
            </ToolBar>
            <ToolBar Visibility="Collapsed">
                <Button Content="CheckHatch" Command="{Binding CheckHatchCommand}"/>
            </ToolBar>
        </ToolBarTray>
        <TabControl Margin="1" Grid.Column="1" Style="{StaticResource TabControlCapsule}">
            <TabItem Header="Процесс">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="GotFocus">
                        <i:ChangePropertyAction TargetObject="{Binding}" PropertyName="IsMainTabOpen" Value="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <ContentControl Content="{Binding CentralSideVM}"/>
                    <ScrollViewer VerticalScrollBarVisibility="Hidden" HorizontalAlignment="Right">
                        <StackPanel hc:Growl.GrowlParent="True" VerticalAlignment="Top" Margin="0,10,10,10"/>
                    </ScrollViewer>
                    <hc:ScrollViewer VerticalScrollBarVisibility="Hidden" HorizontalAlignment="Right" IsPenetrating="True">
                        <StackPanel hc:Growl.GrowlParent="True" VerticalAlignment="Top" Margin="0,10,10,10"/>
                    </hc:ScrollViewer>
                    <Grid Grid.Column="1" VerticalAlignment="Stretch">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <hc:SimpleStackPanel>
                            <!--<Border x:Name="ImportantMessage"
                                BorderThickness="2" 
                                BorderBrush="Blue"
                                Padding="2"
                                CornerRadius="3"
                                Height="30"
                                Margin="1"
                                >
                                <DockPanel>
                                    <Image x:Name="ImportantIcon" Source="{Binding IconPath}" DockPanel.Dock="Left" Margin="0,0,5,0"/>
                                    <TextBlock x:Name="ImportantText" Text="{Binding TechInfo}" FontWeight="Bold" FontSize="15" Foreground="Red">
                                    <i:Interaction.Triggers>
                                        <i:PropertyChangedTrigger Binding="{Binding Text, ElementName=ImportantText}">
                                            <i:ControlStoryboardAction Storyboard="{StaticResource DangerMessage}"/>                                
                                        </i:PropertyChangedTrigger>
                                    </i:Interaction.Triggers>
                                    </TextBlock>
                                </DockPanel>
                            </Border>-->

                            <ContentControl Content="{Binding RightSideVM}" 
                                        MinHeight="300"
                                        Visibility="{Binding IsRightPanelVisible, Converter={StaticResource Boolean2VisibilityConverter}}">
                            </ContentControl>
                        </hc:SimpleStackPanel>
                        <hc:SimpleStackPanel Grid.Row="1">
                            <hc:Divider Orientation="Horizontal" Style="{StaticResource DividerBaseStyle}"/>
                            <Border BorderBrush="{StaticResource PrimaryBrush}" CornerRadius="5" BorderThickness="1">
                                <StackPanel Orientation="Horizontal">
                                    <Button Command="{Binding OpenFileCommand}" HorizontalAlignment="Left" Content="Файл" Style="{StaticResource ButtonPrimary.Small}" />
                                    <TextBlock Text="{Binding DataContext.FileName, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"
                                           Margin="5,0"
                                           Style="{StaticResource TextBlockDefault}"
                                           />
                                </StackPanel>
                            </Border>
                        </hc:SimpleStackPanel>
                        <GroupBox x:Name="ProcessPanel"
                                  Header="Текущий процесс" 
                                  Grid.Row="2"
                                  >
                            <i:Interaction.Triggers>
                                <i:DataTrigger Binding="{Binding IsFileLoaded}" Value="False">
                                    <i:ChangePropertyAction PropertyName="Visibility" Value="Collapsed"/>
                                </i:DataTrigger>
                                <i:DataTrigger Binding="{Binding IsFileLoaded}" Value="True">
                                    <i:ChangePropertyAction PropertyName="Visibility" Value="Visible"/>
                                </i:DataTrigger>
                            </i:Interaction.Triggers>

                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <hc:SimpleStackPanel>                                    
                                    <WrapPanel IsEnabled="{Binding IsProcessLoaded, Converter={StaticResource Boolean2BooleanReConverter}}">
                                        <StackPanel x:Name="FileScale" Orientation="Horizontal">
                                            <StackPanel.Resources>
                                                <x:Array x:Key="Scales" Type="sys:Object">
                                                    <x:Static Member="classes:Scale.ThousandToOne"/>
                                                    <x:Static Member="classes:Scale.HundredToOne"/>
                                                    <x:Static Member="classes:Scale.OneToOne"/>
                                                </x:Array>
                                            </StackPanel.Resources>
                                            <hc:ComboBox ItemsSource="{Binding Source={StaticResource Scales}}" 
                                                         SelectedItem="{Binding DefaultFileScale}"
                                                         SelectedIndex="0"
                                                         hc:TitleElement.Title="Масштаб файла"
                                                         hc:TitleElement.TitlePlacement="Left"
                                                         hc:TitleElement.Background="Black"
                                                         Width="180"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <StackPanel.Resources>
                                                <x:Array x:Key="FileAlignments" Type="{x:Type sys:Enum}">
                                                    <classes:FileAlignment>AlignByCorner</classes:FileAlignment>
                                                    <classes:FileAlignment>AlignByThreePoint</classes:FileAlignment>
                                                    <classes:FileAlignment>AlignByTwoPoint</classes:FileAlignment>
                                                </x:Array>
                                            </StackPanel.Resources>
                                            <controls:ItemsButton DockPanel.Dock="Right"
                                                                 Width="40"
                                                                 ItemSelector="{StaticResource AligningSelector}"
                                                                 Items="{StaticResource FileAlignments}"
                                                                 SelectedItem="{Binding FileAlignment, Mode=TwoWay}"
                                                                 HorizontalAlignment="Stretch"
                                                                >
                                            </controls:ItemsButton>
                                            <Label Content="Тип совмещения"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox IsChecked="{Binding IsWaferMark, Mode=OneWayToSource}"
                                                  Content="Маркировать"
                                                  Margin="5,0,5,0"
                                                  />
                                            <Button Command="{Binding SetMarkPositionCommand}" Width="36" IsEnabled="{Binding IsWaferMark}">
                                                <Grid >
                                                    <Path x:Name="grid" Data="{StaticResource DownGeometry}" Stretch="Uniform"  RenderTransformOrigin="0.5 0.5"  Fill="{StaticResource TextIconBrush}"/>
                                                </Grid>
                                                <i:Interaction.Triggers>
                                                    <i:DataTrigger Binding="{Binding MarkPosition}" Value="{x:Static vm:MarkPosition.W}">
                                                        <i:ChangePropertyAction TargetObject="{Binding ElementName=grid}" PropertyName="RenderTransform">
                                                            <i:ChangePropertyAction.Value>
                                                                <RotateTransform Angle="90"/>
                                                            </i:ChangePropertyAction.Value>
                                                        </i:ChangePropertyAction>
                                                    </i:DataTrigger>
                                                    <i:DataTrigger Binding="{Binding MarkPosition}" Value="{x:Static vm:MarkPosition.N}">
                                                        <i:ChangePropertyAction TargetObject="{Binding ElementName=grid}" PropertyName="RenderTransform">
                                                            <i:ChangePropertyAction.Value>
                                                                <RotateTransform Angle="180"/>
                                                            </i:ChangePropertyAction.Value>
                                                        </i:ChangePropertyAction>
                                                    </i:DataTrigger>
                                                    <i:DataTrigger Binding="{Binding MarkPosition}" Value="{x:Static vm:MarkPosition.E}">
                                                        <i:ChangePropertyAction TargetObject="{Binding ElementName=grid}" PropertyName="RenderTransform">
                                                            <i:ChangePropertyAction.Value>
                                                                <RotateTransform Angle="-90"/>
                                                            </i:ChangePropertyAction.Value>
                                                        </i:ChangePropertyAction>
                                                    </i:DataTrigger>
                                                    <i:DataTrigger Binding="{Binding MarkPosition}" Value="{x:Static vm:MarkPosition.S}">
                                                        <i:ChangePropertyAction TargetObject="{Binding ElementName=grid}" PropertyName="RenderTransform">
                                                            <i:ChangePropertyAction.Value>
                                                                <RotateTransform Angle="0"/>
                                                            </i:ChangePropertyAction.Value>
                                                        </i:ChangePropertyAction>
                                                    </i:DataTrigger>
                                                </i:Interaction.Triggers>
                                            </Button>
                                        </StackPanel>

                                        <StackPanel Orientation="Horizontal">
                                            <ToggleButton IsChecked="{Binding CutMode}">
                                                <ToggleButton.Resources>
                                                    <Style TargetType="ToggleButton" BasedOn="{StaticResource ToggleButtonDefault}">
                                                        <Style.Triggers>
                                                            <Trigger Property="IsChecked" Value="True">
                                                                <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ToggleButton.Resources>

                                                <Path Data="{StaticResource ScissorGeometry}" Stretch="Uniform" 
                                                          Fill="{StaticResource PrimaryTextBrush}" 
                                                          RenderTransformOrigin="0.5 0.5">
                                                    <Path.RenderTransform>
                                                        <ScaleTransform ScaleY="-1"/>
                                                    </Path.RenderTransform>
                                                </Path>
                                            </ToggleButton>
                                            <Button Command="{Binding UndoCutCommand}"
                                                IsEnabled="{Binding CanUndoCut, Mode=OneWay}"
                                                hc:IconElement.Geometry="{StaticResource UndoArrowGeometry}"
                                                RenderTransformOrigin="0.5 0.5">
                                                <Button.RenderTransform>
                                                    <ScaleTransform ScaleY="-1"/>
                                                </Button.RenderTransform>
                                            </Button>
                                        </StackPanel>
                                    </WrapPanel>
                                    <UniformGrid Columns="2" 
                                                     IsEnabled="{Binding IsProcessLoaded, Converter={StaticResource Boolean2BooleanReConverter}}">
                                        <ContentControl Content="{Binding LayersProcessingModel}"/>
                                        <DataGrid ItemsSource="{Binding ChosenProcessingObjects}" 
                                                  IsEnabled="False">
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Header="Слой" Binding="{Binding Layer}"/>
                                                <DataGridTemplateColumn Header="Тип">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <ContentControl Content="{Binding LaserEntity}" ContentTemplateSelector="{StaticResource EntitySelector}"/>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>
                                                <DataGridTextColumn Header="Материал" Binding="{Binding Technology.Material.Name}"/>
                                                <DataGridTextColumn Header="Технология" Binding="{Binding Technology.ProgramName}"/>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                    </UniformGrid>
                                    <hc:ToggleBlock HorizontalAlignment="Left" IsChecked="{Binding IsProcessPanelVisible}">
                                        <hc:ToggleBlock.UnCheckedContent>
                                            <Button hc:IconElement.Geometry="{StaticResource DownloadGeometry}"
                                                    Command="{Binding DownloadProcessCommand}"/>
                                        </hc:ToggleBlock.UnCheckedContent>
                                        <hc:ToggleBlock.CheckedContent>
                                            <hc:ToggleBlock IsChecked="{Binding OnProcess}">
                                                <hc:ToggleBlock.UnCheckedContent>
                                                    <hc:ElementGroup Orientation="Horizontal">
                                                        <ToggleButton Command="{Binding StartStopProcessCommand}"
                                                                      CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked}"
                                                                      IsChecked="{Binding OnProcess}"
                                                                      hc:IconSwitchElement.Geometry="{StaticResource PlaySignGeometry}"
                                                                      hc:IconSwitchElement.GeometrySelected="{StaticResource StopSignGeometry}"
                                                                      RenderTransformOrigin="0,0.5"
                                                                      Style="{StaticResource ToggleButtonIcon}"
                                                                      >
                                                            <ToggleButton.RenderTransform>
                                                                <ScaleTransform ScaleY="-1"/>
                                                            </ToggleButton.RenderTransform>
                                                        </ToggleButton>
                                                        <Button hc:IconElement.Geometry="{StaticResource RemoveGeometry}"
                                                                Command="{Binding DenyDownloadedProcessCommand}"
                                                                Style="{StaticResource ButtonDashedDanger.Small}"
                                                                ToolTip="Отменить"
                                                                hc:TipElement.Placement="TopLeft"
                                                                />
                                                    </hc:ElementGroup>
                                                </hc:ToggleBlock.UnCheckedContent>
                                                <hc:ToggleBlock.CheckedContent>
                                                    <ToggleButton Command="{Binding StartStopProcessCommand}"
                                                          CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked}"
                                                          IsChecked="{Binding OnProcess}"
                                                          hc:IconSwitchElement.Geometry="{StaticResource PlaySignGeometry}"
                                                          hc:IconSwitchElement.GeometrySelected="{StaticResource StopSignGeometry}"
                                                          RenderTransformOrigin="0,0.5"
                                                          Style="{StaticResource ToggleButtonIcon}"
                                                          >
                                                        <ToggleButton.RenderTransform>
                                                            <ScaleTransform ScaleY="-1"/>
                                                        </ToggleButton.RenderTransform>
                                                    </ToggleButton>
                                                </hc:ToggleBlock.CheckedContent>
                                            </hc:ToggleBlock>
                                        </hc:ToggleBlock.CheckedContent>
                                    </hc:ToggleBlock>
                                </hc:SimpleStackPanel>
                                <UniformGrid Rows="2" Grid.Row="1">
                                    <DataGrid x:Name="ProcObjGrid"
                                              ItemsSource="{Binding ProcessingObjects}"
                                              SelectionMode="Single"     
                                              SelectionChanged="DataGrid_SelectionChanged"
                                              Visibility="{Binding IsProcessPanelVisible, Converter={StaticResource Boolean2VisibilityConverter}}"
                                              >
                                        <DataGrid.Columns>
                                            <DataGridTextColumn IsReadOnly="True" Width="80" CanUserResize="False" Binding="{Binding Index}" Header="№"/>

                                            <DataGridTextColumn Header="Слой" Binding="{Binding ProcObject.LayerName}"/>
                                            <DataGridTemplateColumn Header="Тип">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <ContentControl Content="{Binding ProcObject, Converter={StaticResource IProcTypeToEntityConverter}}" 
                                                                            ContentTemplateSelector="{StaticResource EntitySelector}"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <DataGridTemplateColumn Header="Координаты">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock >
                                                                <Run Text="{Binding ProcObject.X, StringFormat='{}{0:#.###}'}"/>
                                                                <Run Text="&#215;"/>
                                                                <Run Text="{Binding ProcObject.Y, StringFormat='{}{0:#.###}'}"/>
                                                        </TextBlock>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                    <GroupBox Grid.Row="1"
                                        Visibility="{Binding IsProcessPanelVisible, Converter={StaticResource Boolean2VisibilityConverter}}"
                                              >
                                        <GroupBox.Header>
                                            <hc:SimpleStackPanel Orientation="Horizontal">
                                                <hc:Shield Subject="Процесс" Status="{Binding TotalProcessTimer}" Color="{StaticResource LightPrimaryBrush}" Margin="0,0,2,0"/>
                                                <hc:Shield Subject="Пред. элемент" Status="{Binding LastProcObjectTimer, FallbackValue='00:00'}" Color="{StaticResource WarningBrush}"  Margin="0,0,2,0"/>
                                                <hc:Shield Subject="Тек. элемент" Status="{Binding CurrentProcObjectTimer}" Color="{StaticResource SuccessBrush}"  Margin="0,0,20,0"/>
                                                <TextBlock Text="{Binding IsBeingProcessedIndex, StringFormat=N3}"/>
                                                <TextBlock Text="{Binding IsBeingProcessedObject.LayerName, StringFormat=N3}"/>
                                                <ContentControl Content="{Binding IsBeingProcessedObject,
                                                Converter={StaticResource IProcTypeToEntityConverter}}" 
                                                ContentTemplateSelector="{StaticResource EntitySelector}"/>
                                                <TextBlock>
                                                <Run Text="{Binding IsBeingProcessedObject.X, StringFormat=N3}"/>
                                                <Run Text="&#215;"/>
                                                <Run Text="{Binding IsBeingProcessedObject.Y, StringFormat=N3}"/>
                                                </TextBlock>
                                            </hc:SimpleStackPanel>
                                        </GroupBox.Header>
                                        <Border 
                                             BorderBrush="{DynamicResource BorderBrush}"
                                             BorderThickness="2"
                                             Padding="20">
                                            <Path Data="{Binding IsBeingProcessedObject, Converter={StaticResource IProcToGeometryConverter}}" 
                                              Stretch="Uniform"
                                              Fill="red"
                                              Stroke="White"
                                              StrokeThickness="1"
                                              RenderTransformOrigin="0.5 0.5"
                                              >
                                                <Path.RenderTransform>
                                                    <ScaleTransform ScaleY="-1"/>
                                                </Path.RenderTransform>
                                            </Path>
                                        </Border>
                                    </GroupBox>
                                </UniformGrid>
                            </Grid>
                        </GroupBox>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Технологии и материалы" TabIndex="1">
                <i:Interaction.Triggers>
                    <i:DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TabItem}, Path=IsSelected}" 
                                   Value="True">
                        <i:InvokeCommandAction Command="{Binding DbLoadCommand}"/>
                    </i:DataTrigger>

                    <i:EventTrigger EventName="GotFocus">
                        <i:ChangePropertyAction TargetObject="{Binding}" PropertyName="IsMainTabOpen" Value="False"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <DockPanel>
                    <ContentControl Content="{Binding LaserDbVM}"/>
                </DockPanel>
            </TabItem>
        </TabControl>
    </Grid>
</hc:GlowWindow>
